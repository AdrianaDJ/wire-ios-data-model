<?xml version='1.0' encoding='UTF-8'?>
<testsuites tests='1529' failures='0'>
  <testsuite name='CoreDataRelationshipsTests' tests='1' failures='0'>
    <testcase classname='CoreDataRelationshipsTests' name='testModelledRelationships' time='0.660'/>
  </testsuite>
  <testsuite name='DatabaseInitTests' tests='3' failures='0'>
    <testcase classname='DatabaseInitTests' name='testThatItCallsCompletionOnceInCaseFileSystemUnlock' time='0.525'/>
    <testcase classname='DatabaseInitTests' name='testThatItReturnsNeedsMigrationInCaseDatabaseEncrypted' time='0.015'/>
    <testcase classname='DatabaseInitTests' name='testThatItWaitsForFileSystemUnlockBeforeDatabaseInit' time='0.008'/>
  </testsuite>
  <testsuite name='DatabaseMovingTests' tests='6' failures='0'>
    <testcase classname='DatabaseMovingTests' name='testThatItConstructsTheStoreURLUsingThePassedSearchPathDirectory' time='0.032'/>
    <testcase classname='DatabaseMovingTests' name='testThatItCreatesACopyOfTheLocalStoreWhenItIsUnreadable' time='0.107'/>
    <testcase classname='DatabaseMovingTests' name='testThatItMovesTheDatabaseFromCachesToApplicationSupportDirectory' time='0.344'/>
    <testcase classname='DatabaseMovingTests' name='testThatItReportsDatabaseDoesNotExistsInCachesDirectoryWhenItIsNotThere' time='0.003'/>
    <testcase classname='DatabaseMovingTests' name='testThatItReportsDatabaseExistsInCachesDirectoryAfterMovingIt' time='0.004'/>
    <testcase classname='DatabaseMovingTests' name='testThatItWipesTheLocalStoreWhenItIsUnreadable' time='0.037'/>
  </testsuite>
  <testsuite name='ManagedObjectContextSaveNotificationTests' tests='2' failures='0'>
    <testcase classname='ManagedObjectContextSaveNotificationTests' name='testThatItEnumeratesInsertedObjects' time='0.016'/>
    <testcase classname='ManagedObjectContextSaveNotificationTests' name='testThatItEnumeratesModifiedObjects' time='0.011'/>
  </testsuite>
  <testsuite name='ManagedObjectContextTests' tests='15' failures='0'>
    <testcase classname='ManagedObjectContextTests' name='testThatItCanSaveWhenItHasChanges' time='0.014'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItDoesNotSaveWhenItHasNoChanges' time='0.011'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItIgnoresNilValuesWhenStoringMetadata' time='0.013'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItPerformsADelayedSaveWhenEnqueuedFromAnotherQueue' time='0.114'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItPerformsADelayedSaveWhenEnqueuedFromTheSameQueue' time='0.112'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItRevertsMetadataWhenRollback' time='0.051'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItRollsBackWhenSaveFails' time='0.017'/>
    <testcase classname='ManagedObjectContextTests' name='testThatItSavesMetadataWhenSaveIsSuccessfull' time='0.009'/>
    <testcase classname='ManagedObjectContextTests' name='testThatSyncContextIsMarkedAsSuch' time='0.010'/>
    <testcase classname='ManagedObjectContextTests' name='testThatTheGroupIsNotified' time='0.026'/>
    <testcase classname='ManagedObjectContextTests' name='testThatTheGroupIsNotifiedOnlyAfterAdditionallyEnqueuedBlocksAreDone' time='0.025'/>
    <testcase classname='ManagedObjectContextTests' name='testThatUserInterfaceContextIsMarkedAsSuch' time='0.010'/>
    <testcase classname='ManagedObjectContextTests' name='testThatWeCanCreateTheUserInterfaceContext' time='0.009'/>
    <testcase classname='ManagedObjectContextTests' name='testThatWeCanGetTheSelfUser' time='0.009'/>
    <testcase classname='ManagedObjectContextTests' name='testThatWeCanStoreMetadataInStore' time='0.009'/>
  </testsuite>
  <testsuite name='ManagedObjectValidationTests' tests='2' failures='0'>
    <testcase classname='ManagedObjectValidationTests' name='testThatValidationOnNonUIContextAlwaysPass' time='0.028'/>
    <testcase classname='ManagedObjectValidationTests' name='testThatValidationOnUIContextIsPerformed' time='0.066'/>
  </testsuite>
  <testsuite name='NSFetchRequestTests_ZMRelationshipKeyPaths' tests='15' failures='0'>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItDoesNotCrashWhenCallingOnNilPredicate' time='0.031'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItDoesNotCrashWhenConfiguringOnNilPredicate' time='0.011'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItDoesNotSetSimpleProperties' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItDoesNotSetSimpleProperties_ComparisonPredicates' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItReturnsKeyPathsForComparisonPredicates' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItReturnsKeypathsForCompoundRequests' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItReturnsRelationshipKeyPaths' time='0.010'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItReturnsRelationshipsForComplexPredicatesCorrectly' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItReturnsSimpleProperties' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItSetsAKeypathForTheSameEntityOnlyOnce_CompoundRequests' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItSetsKeyPathForTheSameEntityOnlyOnce_ComparisonPredicates' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItSetsKeyPathsForComparisonPredicates' time='0.010'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItSetsKeypathsForCompoundRequests' time='0.010'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItSetsRelationshipKeyPaths' time='0.009'/>
    <testcase classname='NSFetchRequestTests_ZMRelationshipKeyPaths' name='testThatItSetsRelationshipsForComplexPredicatesCorrectly' time='0.010'/>
  </testsuite>
  <testsuite name='OTRMigrationTests' tests='8' failures='0'>
    <testcase classname='OTRMigrationTests' name='testThatItDoesNotMigrateFromANonE2EEVersionAndWipesTheDB' time='0.349'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_1_25_ToCurrentModelVersion' time='1.131'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_1_27_ToCurrentModelVersion' time='0.858'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_1_28_ToCurrentModelVersion' time='0.828'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_2_3_ToCurrentModelVersion' time='0.858'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_2_4_ToCurrentModelVersion' time='0.953'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_2_5_ToCurrentModelVersion' time='0.857'/>
    <testcase classname='OTRMigrationTests' name='testThatItPerformsMigrationFrom_2_6_ToCurrentModelVersion' time='0.796'/>
  </testsuite>
  <testsuite name='PersistentChangeTrackingTests' tests='1' failures='0'>
    <testcase classname='PersistentChangeTrackingTests' name='testThatChangesAreMitigatedBetweenContexts' time='0.088'/>
  </testsuite>
  <testsuite name='PersistentStoreCoordinatorTests' tests='2' failures='0'>
    <testcase classname='PersistentStoreCoordinatorTests' name='testThatChangesInOneContextAreVisibleInAnother' time='0.098'/>
    <testcase classname='PersistentStoreCoordinatorTests' name='testThatPermissionsAreCorrectlySet' time='0.193'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.AnyClassTupleTests' tests='6' failures='0'>
    <testcase classname='ZMCDataModelTests.AnyClassTupleTests' name='testThatTwoTuplesAreEqual' time='0.032'/>
    <testcase classname='ZMCDataModelTests.AnyClassTupleTests' name='testThatTwoTuplesAreNotEqualOnClass' time='0.011'/>
    <testcase classname='ZMCDataModelTests.AnyClassTupleTests' name='testThatTwoTuplesAreNotEqualOnString' time='0.009'/>
    <testcase classname='ZMCDataModelTests.AnyClassTupleTests' name='testThatTwoTuplesDoNotHaveTheSameHashOnClass' time='0.009'/>
    <testcase classname='ZMCDataModelTests.AnyClassTupleTests' name='testThatTwoTuplesDoNotHaveTheSameHashOnString' time='0.009'/>
    <testcase classname='ZMCDataModelTests.AnyClassTupleTests' name='testThatTwoTuplesHaveTheSameHash' time='0.010'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.CallingInitialisationNotificationTests' tests='1' failures='0'>
    <testcase classname='ZMCDataModelTests.CallingInitialisationNotificationTests' name='testThatItSendTheCorrectNotification' time='0.010'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ChangedObjectSetTests' tests='6' failures='0'>
    <testcase classname='ZMCDataModelTests.ChangedObjectSetTests' name='testEquatable' time='0.010'/>
    <testcase classname='ZMCDataModelTests.ChangedObjectSetTests' name='testTestItCanBeCreatedFromAObjectsDidChangeNotification' time='0.010'/>
    <testcase classname='ZMCDataModelTests.ChangedObjectSetTests' name='testThatItCanUnionMultipleObjects' time='0.010'/>
    <testcase classname='ZMCDataModelTests.ChangedObjectSetTests' name='testThatItCanUnionTheSameObjectWithMultipleKeys' time='0.010'/>
    <testcase classname='ZMCDataModelTests.ChangedObjectSetTests' name='testThatPoppingAnEmptySet' time='0.010'/>
    <testcase classname='ZMCDataModelTests.ChangedObjectSetTests' name='testThatPoppingASetWithASingleObjectReturnsThatObject' time='0.010'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ClientMessageTests_Location' tests='2' failures='0'>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_Location' name='testThatItDoesNotReturnLocationMessageDataWhenNotPresent' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_Location' name='testThatItReturnsLocationMessageDataWhenPresent' time='0.048'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ClientMessageTests_OTR' tests='4' failures='0'>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_OTR' name='testThatItCreatesPayloadDataForTextMessage' time='0.183'/>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_OTR' name='testThatItCreatesPayloadForExternalMessage' time='0.079'/>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_OTR' name='testThatItCreatesPayloadForZMClearedMessages' time='0.050'/>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_OTR' name='testThatItCreatesPayloadForZMLastReadMessages' time='0.048'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ClientMessageTests_ZMImageOwner' tests='3' failures='0'>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_ZMImageOwner' name='testThatItCachesAndEncryptsTheMediumImage' time='0.231'/>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_ZMImageOwner' name='testThatItReturnsCorrectOriginalImageSize' time='0.047'/>
    <testcase classname='ZMCDataModelTests.ClientMessageTests_ZMImageOwner' name='testThatUpdatesLinkPreviewStateAndDeleteOriginalDataAfterProcessingFinishes' time='0.134'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ConversationObserverTokenTests' tests='28' failures='0'>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testPerformanceOfCalculatingChangeNotificationsWhenANewMessageArrives' time='2.051'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItDoesNotNotifyTheObserverBecauseAUsersAccentColorChanged' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItDoesNotNotifyTheObserverOfANameChangeBecauseAUserWasRemovedAndLaterItsNameChanged' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverIfTheSelfUserIsAdded' time='0.028'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverIfTheVoiceChannelStateChanges' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfAChangedClearedTimeStamp' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfAChangedListIndicatorBecauseOfAnUnreadMissedCall' time='0.029'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfAnAddedParticipant' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChange' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChangeBecauseAnActiveParticipantWasAdded' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChangeBecauseAUserWasAdded' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChangeBecauseAUserWasAddedAndLaterItsNameChanged' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChangeBecauseOfActiveParticipants' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChangeBecauseOfActiveParticipantsMultipleTimes' time='0.042'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChangeBecauseOfOtherUserNameChange' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfAnInsertedMessage' time='0.035'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfAnRemovedParticipant' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfASecurityLevelChange' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedArchivedStatus' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedConnectionStatusWhenInsertingAConnection' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedConnectionStatusWhenUpdatingAConnection' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedDisplayName' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedLastModifiedDate' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedSilencedStatus' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverOfChangedUnreadCount' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifiesTheObserverWhenTheUserLeavesTheConversation' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItNotifysTheObserverOfANameChangeBecauseAUserWasAddedLaterAndHisNameChanged' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ConversationObserverTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.018'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.CryptoBoxTest' tests='2' failures='0'>
    <testcase classname='ZMCDataModelTests.CryptoBoxTest' name='testThatCryptoBoxFolderIsForbiddenFromBackup' time='0.085'/>
    <testcase classname='ZMCDataModelTests.CryptoBoxTest' name='testThatCryptoBoxFolderIsMarkedForEncryption' time='0.002'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.FileAssetCacheTests' tests='20' failures='0'>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatAssetsAreLoadedAcrossInstances' time='0.038'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatHasDataOnDisk' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatHasNoDataOnDiskWithWrongEncryptionFlag' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatHasNoDataOnDiskWithWrongFileName' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatHasNoDataOnDiskWithWrongUUID' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItCreatesASafeURLWhenFileNameHasInvalidCharacters' time='0.004'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItCreatesTheEncryptedFileAndDoesNotDeletedThePlainTextWithSHA256' time='0.003'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItDeletesAnExistingAssetData' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItDeletesTheRequestData' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItDeletesTheRightAssetData' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItDoesDecryptAndDeletesAFileWithTheRightSHA256' time='0.003'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItDoesNotDecryptAFileThatDoesNotExistSHA256' time='0.001'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItDoesNotDecryptAndDeletesAFileWithWrongSHA256' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItReturnsCorrectEncryptionResultWithSHA256' time='0.003'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatItStoresTheRequestDataAndReturnsTheFileURL' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatRetrievingMissingAssetsFilenameReturnsNil' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatRetrievingMissingAssetsUUIDReturnsNil' time='0.002'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatReturnsNilWhenEncryptingAMissingFileWithSHA256' time='0.001'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatStoringAndRetrievingAssetsWithDifferentOptionsRetrievesTheRightData' time='0.004'/>
    <testcase classname='ZMCDataModelTests.FileAssetCacheTests' name='testThatTheURLOfAFileHasTheSameFilenameAndExtension' time='0.002'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.GlobalConversationObserverTests' tests='22' failures='0'>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatAConversationThatGetsAddedToTheListIsLaterRemovedWhenItChangesNotToMatchThePredicate' time='0.083'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatAnObserverIsNotNotifiedAfterBeingRemoved' time='0.020'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItDoesNotNotifyObserversWhenANewConversationIsInsertedThatDoesNotMatchListPredicate' time='0.017'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItDoesNotNotifyObserversWhenTheOnlyChangeIsAnInsertedMessage' time='0.020'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesGlobalVoiceChannelObserversWhenAVoiceChannelStateChanges' time='0.019'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesListObserversWhenAConversationIsRemovedFromTheListBecauseItIsArchived' time='0.019'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAConversationChangesSoItNowDoesMatchThePredicate' time='0.018'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAConversationChangesSoItNowDoesNotMatchThePredicate' time='0.019'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAConversationChangesToNotMatchThePredicateAndThenToMatchThePredicateAgain' time='0.021'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAConversationChangesToNotMatchThePredicateAndThenToMatchThePredicateAgain_Calling' time='0.022'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAConversationUpdatesUserDefinedName' time='0.020'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAMessageBecomesUnreadUnsent' time='0.020'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenANewConversationIsInsertedThatMatchesListPredicate' time='0.019'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenAUserInAConversationChangesTheirName' time='0.023'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenTheEstimatedUnreadCountChanges' time='0.022'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenThereIsAnUnreadPingInAConversation' time='0.021'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenTheUserInOneOnOneConversationGetsBlocked' time='0.020'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesObserversWhenWeInsertAnUnreadMissedCall' time='0.019'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItNotifiesTheObserverIfTheConnectionStateOfAConversationChangesAndAfterThatItMatchesAList' time='0.022'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.023'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatTheListIsOrderedWhenAConversationIsInserted' time='0.023'/>
    <testcase classname='ZMCDataModelTests.GlobalConversationObserverTests' name='testThatTheListIsReorderedWhenAConversationChangesTheLastModifiedTime' time='0.023'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ImageAssetCacheTests' tests='11' failures='0'>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatAssetsAreLoadedAcrossInstances' time='0.003'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItCreatesTheEncryptedFileAndDoesNotDeletedThePlainTextWithSHA256' time='0.003'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItDeletesAnExistingAssetData' time='0.003'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItDeletesTheRightAssetData' time='0.005'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItDoesDecryptAndDeletesAFileWithTheRightSHA256' time='0.004'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItDoesNotDecryptAFileThatDoesNotExistSHA256' time='0.002'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItDoesNotDecryptAndDeletesAFileWithWrongSHA256' time='0.003'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatItReturnsCorrectEncryptionResultWithSHA256' time='0.004'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatRetrievingMissingAssetsReturnsNil' time='0.002'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatReturnsNilWhenEncryptingAMissingFileWithSHA256' time='0.002'/>
    <testcase classname='ZMCDataModelTests.ImageAssetCacheTests' name='testThatStoringAndRetrievingAssetsWithDifferentOptionsRetrievesTheRightData' time='0.009'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.KeyPathTests' tests='4' failures='0'>
    <testcase classname='ZMCDataModelTests.KeyPathTests' name='testThatItCreatesASimpleKeyPath' time='0.019'/>
    <testcase classname='ZMCDataModelTests.KeyPathTests' name='testThatItCreatesKeyPathThatIsAPath' time='0.012'/>
    <testcase classname='ZMCDataModelTests.KeyPathTests' name='testThatItDecomposesKeyPaths' time='0.012'/>
    <testcase classname='ZMCDataModelTests.KeyPathTests' name='testThatItDecomposesSimpleKeys' time='0.010'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.LinkPreview_ProtobufTests' tests='3' failures='0'>
    <testcase classname='ZMCDataModelTests.LinkPreview_ProtobufTests' name='testThatItCreatesAValidArticle_NewStyleProtos' time='0.012'/>
    <testcase classname='ZMCDataModelTests.LinkPreview_ProtobufTests' name='testThatItCreatesAValidArticle_OldStyleProtos' time='0.001'/>
    <testcase classname='ZMCDataModelTests.LinkPreview_ProtobufTests' name='testThatItCreatesAValidArticleWithTweet_NewStyle' time='0.001'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ManagedObjectChangesTests' tests='4' failures='0'>
    <testcase classname='ZMCDataModelTests.ManagedObjectChangesTests' name='testThatItAppendsChangesToOtherChanges' time='0.033'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectChangesTests' name='testThatItCreatesTheObjectCorrectly' time='0.028'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectChangesTests' name='testThatItFiltersOutZombies' time='0.012'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectChangesTests' name='testThePerformanceOfTheFilteringOfZombieObjects' time='0.334'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ManagedObjectContextObserverTests' tests='9' failures='0'>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItAddsCallStateChangesAndProcessesThemDirectly' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItAddsCallStateChangesAndProcessThemLater' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItAddsTheGlobalConversationObserverToItsObserversWhenEnteringTheForeground' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItAddsTheGlobalUserObserverToItsObserversWhenEnteringTheForeground' time='0.064'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItDoesNotPropagateChangesWhenAppIsInTheBackground' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItFiltersZombieObjectsFromManagedObjectChangesInsertedAndUpdated' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItNotifiesAllObserversWhenTheAppGoesBackInTheForeground' time='0.025'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItPropagatesChangesOfComputedProperties_Files' time='0.073'/>
    <testcase classname='ZMCDataModelTests.ManagedObjectContextObserverTests' name='testThatItPropagatesChangesOfComputedProperties_Images' time='0.034'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.MessageObserverTokenTests' tests='12' failures='0'>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItDoesNotNotifiyObserversWhenTheSmallImageDataChanges' time='0.525'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheDeliveryStateChanges' time='0.531'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheFileTransferStateChanges' time='0.525'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheLinkPreviewStateChanges' time='0.520'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheLinkPreviewStateChanges_NewGenericMessageData' time='0.534'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheMediumImageDataChanges' time='0.523'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheSenderAccentColorChanges' time='0.528'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheSenderMediumProfileImageChanges' time='0.552'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheSenderNameChanges' time='0.579'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheSenderNameChangesBecauseOfAnotherUserWithTheSameName' time='0.533'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItNotifiesObserverWhenTheSenderSmallProfileImageChanges' time='0.535'/>
    <testcase classname='ZMCDataModelTests.MessageObserverTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.017'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.MessageWindowChangeTokenTests' tests='13' failures='0'>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItDoesNotNotifyIfThereAreNoConversationWindowChanges' time='0.022'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItDoesNotNotifyTwiceWhenReceivingDidFinishFetchingNotification' time='0.022'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItDoesNotNotifyTwiceWhenReceivingStartFetchingNotification' time='0.022'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItDoesNotNotifyWhenReceivingDidFinishFetchingNotificationWithoutHavingPreviouslyStarted' time='0.021'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesAfterAWindowScrollNotification' time='0.020'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesForAMessageUpdate' time='0.024'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesForClearingMessageHistory' time='0.024'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesIfThereAreConversationWindowChangesWithDeletes' time='0.028'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesIfThereAreConversationWindowChangesWithInsert' time='0.022'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesIfThereAreConversationWindowChangesWithMoves' time='0.024'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesWhenReceivingDidFinishFetchingNotification' time='0.023'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItNotifiesWhenReceivingStartFetchingNotification' time='0.023'/>
    <testcase classname='ZMCDataModelTests.MessageWindowChangeTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.022'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.MimeTypeTests' tests='4' failures='0'>
    <testcase classname='ZMCDataModelTests.MimeTypeTests' name='testThatItParsesAudioMimeTypeCorrectly_Negative' time='0.006'/>
    <testcase classname='ZMCDataModelTests.MimeTypeTests' name='testThatItParsesAudioMimeTypeCorrectly_Positive' time='0.001'/>
    <testcase classname='ZMCDataModelTests.MimeTypeTests' name='testThatItParsesVideoMimeTypeCorrectly_Negative' time='0.001'/>
    <testcase classname='ZMCDataModelTests.MimeTypeTests' name='testThatItParsesVideoMimeTypeCorrectly_Positive' time='0.001'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' tests='7' failures='0'>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItDoesNotNotifyObserversWhenAMessageOlderThanTheLastReadIsInserted' time='0.021'/>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItDoesNotNotifyObserversWhenItHasNoConversation' time='0.013'/>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItDoesNotNotifyObserversWhenTheConversationHasNoLastRead' time='0.019'/>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItDoesNotNotifyObserversWhenTheMessageHasNoEventID' time='0.020'/>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItNotifiesObserversWhenAMessageMoreRecentThanTheLastReadIsInserted' time='0.018'/>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItNotifiesObserversWhenANewKnockMessageIsInserted' time='0.019'/>
    <testcase classname='ZMCDataModelTests.NewUnreadMessageObserverTokenTests' name='testThatItNotifiesObserversWhenANewOTRKnockMessageIsInserted' time='0.021'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ObjectDependencyTokenTests' tests='3' failures='0'>
    <testcase classname='ZMCDataModelTests.ObjectDependencyTokenTests' name='testThatItDoesNotNotifyTheObserverForADifferentObject' time='0.028'/>
    <testcase classname='ZMCDataModelTests.ObjectDependencyTokenTests' name='testThatItDoesNotNotifyTheObserverThatAKeyItDoesNotTrackChanged' time='0.015'/>
    <testcase classname='ZMCDataModelTests.ObjectDependencyTokenTests' name='testThatItNotifiesAnObserverThatAKeyChanged' time='0.015'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ObjectSnapshotTests' tests='9' failures='0'>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItDoesNotReturnANewSnapshotIfThereIsAChangedObjectInARelationship' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItDoesNotReturnANewSnapshotIfThereIsAChangeInAnObservedKeyThatIsNotPassedToTheUpdate' time='0.015'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItDoesNotReturnsANewSnapshotIfThereIsAChangeInAKeyThatIsNotObserved' time='0.015'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItReturnsANewSnapshotAndKeysAfterAChangeInAMutableObject' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItReturnsANewSnapshotAndKeysOnceIfANilObjectBecameNotNil' time='0.032'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItReturnsANewSnapshotAndKeysOnceIfANonNilObjectBecameNil' time='0.027'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItReturnsANewSnapshotAndKeysOnceIfThereIsAChangeInTheOnlyKeyObserved' time='0.015'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItReturnsANewSnapshotAndKeysOnceIfThereIsANewObjectInARelationship' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ObjectSnapshotTests' name='testThatItReturnsNoNewSnapshotIfThereIsNoChange' time='0.015'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ObserverTokenDirectoryTests' tests='2' failures='0'>
    <testcase classname='ZMCDataModelTests.ObserverTokenDirectoryTests' name='testThatCreatesOnlyOneTokenForTheSameObject' time='0.030'/>
    <testcase classname='ZMCDataModelTests.ObserverTokenDirectoryTests' name='testThatCreatesTwoTokensForDifferentObjects' time='0.019'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ProtobufUtilitiesTests' tests='5' failures='0'>
    <testcase classname='ZMCDataModelTests.ProtobufUtilitiesTests' name='testThatItCreatesALinkPreviewWithTheDeprecatedArticleInside' time='0.011'/>
    <testcase classname='ZMCDataModelTests.ProtobufUtilitiesTests' name='testThatItDoesNotReturnTheLoudnessIfEmpty' time='0.010'/>
    <testcase classname='ZMCDataModelTests.ProtobufUtilitiesTests' name='testThatItSetsAndReadsTheLoudness' time='0.009'/>
    <testcase classname='ZMCDataModelTests.ProtobufUtilitiesTests' name='testThatItUpdatesTheLinkPreviewWithAssetIDAndToken' time='0.002'/>
    <testcase classname='ZMCDataModelTests.ProtobufUtilitiesTests' name='testThatItUpdatesTheLinkPreviewWithOTRKeyAndSha' time='0.001'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.SearchUserObserverTokenTests' tests='3' failures='0'>
    <testcase classname='ZMCDataModelTests.SearchUserObserverTokenTests' name='testThatItNotifiesTheObserverOfASmallProfilePictureChange' time='0.017'/>
    <testcase classname='ZMCDataModelTests.SearchUserObserverTokenTests' name='testThatItNotifiesTheObserverOfASmallProfilePictureChangeIfTheInternalUserUpdates' time='0.020'/>
    <testcase classname='ZMCDataModelTests.SearchUserObserverTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.014'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.UserClientKeysStoreTests' tests='10' failures='0'>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatANonEmptyLegacyOTRFolderIsDeleted' time='0.005'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatItCanDeleteANonExistingOldIdentityFolder' time='0.004'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatItCanGenerateMoreKeys' time='0.004'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatItMovesTheLegacyCryptobox' time='0.017'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatItWrapsKeysTo0WhenReachingTheMaximum' time='0.070'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatTheEmptyLegacyOTRFolderIsDetected' time='0.004'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatTheLegacyOTRFolderIsNotDetected' time='0.004'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatTheNonEmptyLegacyOTRFolderIsDetected' time='0.004'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatTheOTRFolderHasBackupDisabled' time='0.004'/>
    <testcase classname='ZMCDataModelTests.UserClientKeysStoreTests' name='testThatTheOTRFolderHasTheRightPath' time='0.004'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.UserClientObserverTokenTests' tests='4' failures='0'>
    <testcase classname='ZMCDataModelTests.UserClientObserverTokenTests' name='testThatItNotifiesTheObserverOfFingerprintChange' time='0.019'/>
    <testcase classname='ZMCDataModelTests.UserClientObserverTokenTests' name='testThatItNotifiesTheObserverOfIgnoredByClientsChange' time='0.017'/>
    <testcase classname='ZMCDataModelTests.UserClientObserverTokenTests' name='testThatItNotifiesTheObserverOfTrustedByClientsChange' time='0.017'/>
    <testcase classname='ZMCDataModelTests.UserClientObserverTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.017'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.UserClientTests' tests='21' failures='0'>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatClientCanBeMarkedForDeletion' time='0.025'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatIgnoringClientsRemovesThemFromTrustedList' time='0.017'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItCanInitializeClient' time='0.014'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItDeletesASession' time='0.022'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItDeletesASessionWhenDeletingAClient' time='0.021'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItDeletesExistingSignalingKeys' time='0.119'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItIsNotVerifiedWhenIgnored' time='0.019'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItIsVerifiedWhenTrusted' time='0.030'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItRefetchesMissingFingerprintForUserWithSession' time='0.024'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItReturnsTrackedKeys' time='0.014'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItSendsMessageWhenResettingSession' time='0.026'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItSetsKeysNeedingToBeSynced' time='0.119'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItStoresFailedToEstablishSessionInformation' time='0.014'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItSyncClientsWithNoRemoteIdentifier' time='0.014'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItTracksCorrectKeys' time='0.014'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatItUpdatesConversationSecurityLevelWhenDeletingClient' time='0.026'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatSelfClientIsStillVerifiedAfterIgnoring' time='0.018'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatSelfClientIsTrusted' time='0.019'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatTrustingClientsRemovesThemFromIgnoredClientList' time='0.015'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatTrustingClientsRemovesTheNeedToNotifyUser' time='0.015'/>
    <testcase classname='ZMCDataModelTests.UserClientTests' name='testThatUnknownClientIsNotVerified' time='0.018'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.UserImageLocalCacheTests' tests='3' failures='0'>
    <testcase classname='ZMCDataModelTests.UserImageLocalCacheTests' name='testThatItHasNilDataWhenNotSet' time='0.022'/>
    <testcase classname='ZMCDataModelTests.UserImageLocalCacheTests' name='testThatItPersistsSmallAndLargeUserImage' time='0.024'/>
    <testcase classname='ZMCDataModelTests.UserImageLocalCacheTests' name='testThatItSetsSmallAndLargeUserImage' time='0.023'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.UserObserverTokenTests' tests='18' failures='0'>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfAConnectionStateChange' time='0.034'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfACreatedIncomingConnection' time='0.021'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfACreatedOutgoingConnection' time='0.020'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfAMediumProfileImageChange' time='0.022'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfAnAccentColorChange' time='0.018'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfANameChange' time='0.057'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfAnEmailChange' time='0.029'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfAPhoneNumberChange' time='0.019'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTheObserverOfASmallProfileImageChange' time='0.021'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiestheObserverOfMultipleNameChanges' time='0.020'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesTrustChangeForClientsAddedAfterSubscribing' time='0.039'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesUserForClientStartsIgnoring' time='0.022'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItNotifiesUserForClientStartsTrusting' time='0.022'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.018'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItUpdatesClientObserversWhenClientIsAdded' time='0.021'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItUpdatesClientObserversWhenClientIsRemoved' time='0.021'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItUpdatesClientObserversWhenClientsAreFaultedAndNewClientIsAdded' time='1.039'/>
    <testcase classname='ZMCDataModelTests.UserObserverTokenTests' name='testThatItUpdatesClientObserversWhenClientsAreFaultedAndNewClientIsAddedSameContext' time='0.022'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.VoiceChannelObserverTokenTests' tests='20' failures='0'>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItDoesNotSendTheUpdateForParticipantsWhoActivatesVideoStreamWhenFLowIsNotActive' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItNotifiesTheObserverOfStateChange' time='0.052'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsACallStateChangeNotificationWhenIgnoringACall' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAChannelStateChangeNotificationsWhenCallIsBeingTransfered' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAChannelStateChangeNotificationsWhenSomeoneIsCalling' time='0.021'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAChannelStateChangeNotificationsWhenSomeoneLeavesTheConversation' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAChannelStateChangeNotificationsWhenTheUserGetsConnectedToTheChannel' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAChannelStateChangeNotificationsWhenTheUserGetsDisconnectedToTheChannel' time='0.021'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAChannelStateChangeNotificationsWhenTransferBecomesReady' time='0.021'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAParticipantsChangeNotificationWhenTheParticipantJoinsTheGroupCall' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAParticipantsChangeNotificationWhenTheParticipantJoinsTheOneToOneCall' time='0.027'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAParticipantsChangeNotificationWhenTheParticipantLeavesTheGroupCall' time='0.023'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsAParticipantsUpdateNotificationWhenTheParticipantBecameActive' time='0.023'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsTheUpdateForParticipantsWhoActivatesVideoStream' time='0.021'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsTheUpdateForParticipantsWhoDeactivatesVideoStream' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsTheUpdateForParticipantsWhoJoinTheVoiceChannel' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsTheUpdateForParticipantsWhoLeaveTheVoiceChannel' time='0.022'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsTheUpdateForParticipantWhenFlowIsEstablished' time='0.021'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItSendsTheUpdateForSecondParticipantsWhoActivatesVideoStream' time='0.021'/>
    <testcase classname='ZMCDataModelTests.VoiceChannelObserverTokenTests' name='testThatItStopsNotifyingAfterUnregisteringTheToken' time='0.018'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ZMAssetClientMessageTests' tests='85' failures='0'>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnAssetClientMessageWithFileDataCan_Not_BeDeleted_Pending' time='0.045'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnAssetClientMessageWithFileDataCanBeDeleted_Delivered' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnAssetClientMessageWithFileDataCanBeDeleted_Expired' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnAssetClientMessageWithImageDataCan_Not_BeDeleted_Pending' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnAssetClientMessageWithImageDataCanBeDeleted_Delivered' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnAssetClientMessageWithImageDataCanBeDeleted_Expired' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatAnImageAssetHasNoFileMessageData' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatDoesNotHaveDownloadedImageWhenTheImageIsNotOnDisk' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatEncryptedDataForFormatReturnsValuesFromEncryptedFile' time='0.040'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatImageDataForFormatReturnsNilWhenThereIsNoFile' time='0.035'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatImageDataForFormatReturnsValuesFromProcessedFile' time='0.040'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatImageDataIdentifierChangesWhenChangingProcessedImage' time='0.140'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatIsNotAnAnimatedGifWhenItHasNoMediumData' time='0.140'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatIsPublicForFormatReturnsNoForAllFormats' time='0.035'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItAddsAnUploadedGenericMessageToTheDataSet' time='0.065'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItAppendsA_NotUploadedCancelled_MessageWhenUploadFromThisDeviceIsCancelled' time='0.053'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCanCancelsUploadMultipleTimes' time='0.042'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCancelsDownload' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCancelsUpload' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItClearsGenericAssetMessageCacheWhenFaulting' time='0.070'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItClearsOnlyTheOriginalImageFormat' time='0.142'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCreatesFileAssetMessageInTheRightStateToBeUploaded' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCreatesOTRAssetMessagesFromFileThumbnailUpdateEvent' time='0.067'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCreatesOTRAssetMessagesFromMediumUpdateEvent' time='0.043'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCreatesPayloadData_Medium' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItCreatesPayloadData_Preview' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItDecryptsEncryptedImageMessageData' time='0.042'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItDeletesMessageIfImageMessageDataCanNotBeDecrypted' time='0.041'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItDoesNotSetAssetIdWhenUpdatingFromAnUploadedMessage' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItDoesNotSetConversationLastServerTimestampWhenPostingMedium' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItDoesNotStoresThumbnailDataIfEmpty' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItDoesNotUpdateTheTimestampIfLater' time='0.041'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItHasDownloadedFileWhenTheFileIsOnDisk' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItHasDownloadedImageWhenTheImageIsOnDisk' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItHasDownloadedImageWhenTheOriginalIsOnDisk' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItHasDownloadedImageWhenTheOriginalThumbnailIsOnDisk' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItHasDownloadedImageWhenTheProcessedThumbnailIsOnDisk' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItHasNoDownloadedFileWhenTheFileIsNotOnDisk' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItItReturnsTheEncryptedGenericMessageDataIncludingThe_NotUploaded_WhenItIsPresent' time='0.091'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItItReturnsTheGenericMessageDataAndInculdesTheNotUploadedWhenItIsPresent_Placeholder' time='0.042'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItMarksMediumNeededToBeDownloadedIfNoEncryptedNoDecryptedDataStored' time='0.043'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItMergesMultipleGenericAssetMessagesForFileMessages' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItPostsANotificationWhenTheDownloadOfTheMessageIsCancelled' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItPreparesMessageForResend' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsAssetIdWhenSettingItDirectly' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsAValidFileMessageData' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsImageDataIdentifier' time='0.041'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsNilAssetIdOnANewlyCreatedMessage' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsNilEncryptedDataIfTheImageIsNotEncrypted' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheEncryptedMetaDataForAVideoDataMessage' time='0.081'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheEncryptedMetaDataForTheFileDataMessage' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheEncryptedPayloadDataForThePlaceholderMessage' time='0.049'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheEncryptedUploadedDataWhenItHasAUploadedGenericMessageInTheDataSet' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheOriginalImageSize' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheRightRequiredImageFormats' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheRightValueForInlineForFormat' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsTheRightValueForUsingNativePushForFormat' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItReturnsZeroOriginalImageSizeIfItWasNotSet' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSavesTheImageDataToFileInPlainTextAndEncryptedWhenSettingTheDataOnAnEncryptedMessage' time='0.145'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSavesTheOriginalFileWhenCreatingMessage' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsAssetIdWhenUpdatingFromAPreviewMessage' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsConversationLastServerTimestampWhenPostingPreview' time='0.046'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsGenericMediumAndPreviewDataWhenCreatingMessage' time='0.044'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheCorrectImageDataPropertiesWhenSettingTheData' time='0.161'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheCorrectStateWhen_RequestFileDownload_IsBeingCalled' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheGenericAssetMessageWhenCreatingMessage' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheMediumSizeOnThePreviewOriginalSize_SetMediumFirst' time='0.156'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheMediumSizeOnThePreviewOriginalSize_SetPreviewFirst' time='0.143'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheOriginalImageSize' time='0.061'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItSetsTheTransferStateToDonwloadedWhen_RequestFileDownload_IsCalledButFileIsAlreadyOnDisk' time='0.044'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItStoresPlainImageMessageDataForMedium' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItStoresPlainImageMessageDataForPreview' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItStoresTheAssociatedTaskIdentifier' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItStoresTheRightEncryptionKeysNoMatterInWhichOrderTheDataIsSet' time='0.150'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItStoresThumbnailDataIfAvailable' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheAssetIdWhenTheUploadedMessageIsMerged' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheMetaDataWhenOriginalAssetMessageGetMerged' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheTimestampIfEarlier' time='0.039'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheTransferStateWhenTheCanceledMessageIsMergedAfterUploadingSuccessfully' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheTransferStateWhenTheNotUploadedCanceledMessageIsMerged' time='0.049'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheTransferStateWhenTheNotUploadedFailedMessageIsMerged' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatItUpdatesTheTransferStateWhenTheUploadedMessageIsMerged' time='0.038'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatOriginalImageDataReturnsNilIfThereIsNoFile' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatOriginalImageDataReturnsTheOriginalFileIfTheFileIsPresent' time='0.040'/>
    <testcase classname='ZMCDataModelTests.ZMAssetClientMessageTests' name='testThatRequestingImageDownloadFiresANotification' time='0.041'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ZMCallStateTests' tests='12' failures='0'>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatChangingTheOriginalDoesNotAffectTheCopy' time='0.037'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItCopiesLocalModificationsChangesAndResetsLocalModifications' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItCopiesStatesChangesAndResetsHasChanges' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItHasChanges' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItMergesAllConversations_MainToSync' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItReturnsAllConversationIDsThatChanged' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItReturnsAllConversationsThatAreChanged' time='0.021'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItReturnsAnEmptySetWhenReturningANilCallStateOnCreateCopy' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItReturnsNilWhenCreatingACopyWithoutChanges' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatItReturnsTheSameStateForTheSameConversation' time='0.019'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatWhenMergingIsIgnoringCall_No_FromMainIntoSyncItDoesNotSetHasLocalmodifcations' time='0.020'/>
    <testcase classname='ZMCDataModelTests.ZMCallStateTests' name='testThatWhenMergingIsIgnoringCallFromSyncIntoMainItDoesNotSetHasLocalmodifcations' time='0.018'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ZMClientMessageTests_Deletion' tests='9' failures='0'>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatAMessageCanBeDeletedByTheUserThatDidInitiallySentIt' time='0.066'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatAMessageCanNotBeDeletedByAUserThatDidNotInitiallySentIt' time='0.044'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatAMessageSentByAnotherUserCanBeDeletedAndASystemMessageIsInserted' time='0.029'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatAMessageSentByAnotherUserCanotBeDeleted' time='0.028'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatItDeletesAMessageFromTheManagedObjectContext' time='0.030'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatItDoesNotInsertAMessageWithTheSameNonceOfAMessageThatHasAlreadyBeenDeleted' time='0.047'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatItDoesNotInsertASystemMessageIfTheMessageDoesNotExist' time='0.025'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatItDoesNotInsertASystemMessageWhenAMessageIsDeletedForEveryoneLocally' time='0.028'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_Deletion' name='testThatTheInsertedDeleteMessageDoesNotHaveAnExpirationDate' time='0.024'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ZMClientMessageTests_TextMessage' tests='11' failures='0'>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItDoesntReturnsImageDataIdentifier_whenArticleHasNoImage' time='0.025'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItDoesntReturnsImageDataIdentifier_whenTwitterStatusHasNoImage' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItHasImageReturnsFalseWhenLinkPreviewDoesntContainAnImage' time='0.035'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItHasImageReturnsFalseWhenLinkPreviewDoesntContainAnImage_TwitterStatus' time='0.044'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItHasImageReturnsTrueIfTheImageIsNotYetProcessedButTheOriginalIsInTheCache' time='0.036'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItHasImageReturnsTrueWhenLinkPreviewWillContainAnImage' time='0.047'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItHasImageReturnsTrueWhenLinkPreviewWillContainAnImage_TwitterStatus' time='0.047'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItReturnsImageDataIdentifier_whenArticleHasImage' time='0.051'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItReturnsImageDataIdentifier_whenTwitterStatusHasImage' time='0.047'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItSendsANotificationToDownloadTheImageWhenRequestImageDownloadIsCalledAndItHasAAssetID' time='0.055'/>
    <testcase classname='ZMCDataModelTests.ZMClientMessageTests_TextMessage' name='testThatItSendsANotificationToDownloadTheImageWhenRequestImageDownloadIsCalledAndItHasAAssetID_Article' time='0.049'/>
  </testsuite>
  <testsuite name='ZMCDataModelTests.ZMConversationCallStateTests' tests='26' failures='0'>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMerge_HasLocalModifications_FromSyncToMain_false' time='0.017'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMerge_HasLocalModifications_FromSyncToMain_true' time='0.016'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMergeAnythingElseFromMainToSync_false' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMergeAnythingElseFromMainToSync_true' time='0.013'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMergeCallDeviceIsActiveFromMainToSyncWhenItHasNoLocalModifications_false' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMergeCallDeviceIsActiveFromMainToSyncWhenItHasNoLocalModifications_true' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItDoesNotMergeCallDeviceIsActiveFromSyncToMainWhenItHasLocalModifications' time='0.013'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesCallDeviceIsActiveFromMainToSyncWhenItHasLocalModifications_false' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesCallDeviceIsActiveFromMainToSyncWhenItHasLocalModifications_true' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesCallDeviceIsActiveFromSyncToMainWhenItHasNoLocalModifications' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesIsOutgoingCallFromMainToSyncWhenItHasLocalModifications' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesIsOutgoingCallFromSyncToMainWhenItHasLocalModifications' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesIsVideoCallFromMainToSync_false' time='0.013'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItMergesIsVideoCallFromMainToSync_true' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatItSetsHasChanges' time='0.015'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatMergingDoesNotClearTheHasChangesFlag' time='0.018'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingActiveFlowParticipantsSetsHasLocalModificationsForActiveParticipants' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingActiveFlowParticipantsSetsHasLocalModificationsForActiveParticipantsOnTheSyncContext' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingIsCallDeviceActiveDoesNotSetHasLocalModificationsForCallDeviceActiveOnTheSyncContext' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingIsCallDeviceActiveSetsHasLocalModificationsForCallDeviceActive' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingIsIgnoringCallDoesNotSetHasLocalModificationsForIsIgnoringCallOnTheSyncContext' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingIsIgnoringCallSetsHasLocalModificationsForIsIgnoringCall' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingIsOutgoingCallSetsHasLocalModificationsForIsOutgoingCall' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingIsOutgoingCallSetsHasLocalModificationsForIsOutgoingCallOnTheSyncContext' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingTimedOutSetsHasLocalModificationsForTimedOut_Main' time='0.014'/>
    <testcase classname='ZMCDataModelTests.ZMConversationCallStateTests' name='testThatSettingTimedOutSetsHasLocalModificationsForTimedOut_Sync' time='0.014'/>
  </testsuite>
  <testsuite name='ZMChangedIndexesTests' tests='2' failures='0'>
    <testcase classname='ZMChangedIndexesTests' name='testThatItCalculatesDifferenceBetweenOrderedSets' time='0.032'/>
    <testcase classname='ZMChangedIndexesTests' name='testThatItCalculatesMovedIndexesForSwappedIndexesCorrectly' time='0.015'/>
  </testsuite>
  <testsuite name='ZMClientMessageTests' tests='25' failures='0'>
    <testcase classname='ZMClientMessageTests' name='testThatAAppendedClientMessageHasLinkPreviewStateWaitingToBeProcessed' time='0.030'/>
    <testcase classname='ZMClientMessageTests' name='testThatAInsertedClientMessageHasADefaultLinkPreviewStateDone' time='0.030'/>
    <testcase classname='ZMClientMessageTests' name='testThatClientMessageIsMarkedAsDelivered' time='0.026'/>
    <testcase classname='ZMClientMessageTests' name='testThatCreatesEncryptedDataAndAddsItToGenericMessageAsBlob' time='0.040'/>
    <testcase classname='ZMClientMessageTests' name='testThatItCanUpdateAnExistingLinkPreviewInTheDataSetWithoutCreatingMultipleOnes' time='0.026'/>
    <testcase classname='ZMClientMessageTests' name='testThatItCreatesClientMessagesFromUpdateEvent' time='0.041'/>
    <testcase classname='ZMClientMessageTests' name='testThatItCreatesOTRMessagesFromUpdateEvent' time='0.030'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDecryptsMessageWithExternalBlobCorrectly' time='0.057'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotCreateClientMessagesIfThereIsAlreadyATextMessageWithTheSameNonce' time='0.028'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotCreateKnockMessagesIfThereIsAlreadyOtrKnockWithTheSameNonce' time='0.028'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotCreateMessageFromClientActionMessage' time='0.027'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotCreateOtrKnockIfThereIsAlreadyKnockMessageWithTheSameNonce' time='0.027'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotCreateTextMessagesFromUpdateEventIfThereIsAlreadyAClientMessageWithTheSameNonce' time='0.028'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotCreateTextMessagesIfThereIsAlreadyAClientMessageWithTheSameNonce' time='0.027'/>
    <testcase classname='ZMClientMessageTests' name='testThatItDoesNotUpdate_IsEncrypted_OnAnAlreadyExistingTextMessageWithTheSameNonceWhenReceivingANonEncryptedClientMessage' time='0.028'/>
    <testcase classname='ZMClientMessageTests' name='testThatItIgnoresUpdates_OnAnAlreadyExistingClientMessageWithoutASenderClientID' time='0.032'/>
    <testcase classname='ZMClientMessageTests' name='testThatItIgnoresUpdates_OnAnAlreadyExistingClientMessageWithTheSameNonceButDifferentClient' time='0.044'/>
    <testcase classname='ZMClientMessageTests' name='testThatItRemovesMissingClient' time='0.040'/>
    <testcase classname='ZMClientMessageTests' name='testThatItReturnsNilIfTheClientMessageContentIsInvalid' time='0.026'/>
    <testcase classname='ZMClientMessageTests' name='testThatItSetsLocallyModifiedKeysWhenLinkPreviewStateIsSet' time='0.027'/>
    <testcase classname='ZMClientMessageTests' name='testThatItStoresClientAsMissing' time='0.031'/>
    <testcase classname='ZMClientMessageTests' name='testThatItUpdates_IsEncrypted_OnAnAlreadyExistingAssetMessageWithTheSameNonceWhenReceivingAnOTRAssetMessage' time='0.028'/>
    <testcase classname='ZMClientMessageTests' name='testThatItUpdates_IsPlainText_OnAnAlreadyExistingClientMessageWithTheSameNonceWhenReceivingAnTextMessage' time='0.029'/>
    <testcase classname='ZMClientMessageTests' name='testThatItUpdatesIsPlainTextOnAlreadyExistingClientMessageWithTheSameNonceWhenReceivingATextMessageFromUpdateEvent' time='0.027'/>
    <testcase classname='ZMClientMessageTests' name='testThatResendingClientMessageResetsExpirationDate' time='0.027'/>
  </testsuite>
  <testsuite name='ZMConnectionTests' tests='38' failures='0'>
    <testcase classname='ZMConnectionTests' name='testStatusFromString' time='0.056'/>
    <testcase classname='ZMConnectionTests' name='testThatAcceptingAConnectionMarksTheUserAsNeedingToBeUpdated' time='0.027'/>
    <testcase classname='ZMConnectionTests' name='testThatAnExistingConnectionIsNotRecreated' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatAnExistingConnectionIsUpdatedWithNewData' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatChangingTheStatusNotifiesSearchDirectory' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatExistingUserAndConversationFromANewConnectionAreMarkedAsNeedingToBeUpdated' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatInsertedUserAndConversationFromANewConnectionAreMarkedAsNeedingToBeUpdated' time='0.027'/>
    <testcase classname='ZMConnectionTests' name='testThatInsertingAConnectionDoesNotMarkTheExistingConversationAsNeededToBeDownloadedIfItHasALastServerTimeStamp' time='0.026'/>
    <testcase classname='ZMConnectionTests' name='testThatInsertingAConnectionMarksTheExistingConversationAsNeededToBeDownloaded' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItCanAcceptBlockedConnection' time='0.035'/>
    <testcase classname='ZMConnectionTests' name='testThatItCanAcceptIgnoredConnection' time='0.034'/>
    <testcase classname='ZMConnectionTests' name='testThatItCanDeserializeItselfFromTransportData' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItCanResendCancelledConnectionRequest' time='0.033'/>
    <testcase classname='ZMConnectionTests' name='testThatItCreatesAConversationForAnIncomingConnection' time='0.029'/>
    <testcase classname='ZMConnectionTests' name='testThatItCreatesAConversationWithConversationType_Connection_ForAutoConnectEvent' time='0.024'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotCrashWithInvalidFields' time='0.105'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotCreateANewSentConnectionToAUserThatAlreadyHasAConnection' time='0.029'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotCreateNewConnectionConversationAndUserForCancelledConnection' time='0.024'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotCreateNewConversationWhenItResendsCancelledConnectionRequest' time='0.035'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotReturnNilForEmptyNonMandatoryFields' time='0.027'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotReturnNilForNullNonMandatoryFields' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItDoesNotTryToMergeCOnversationsWithTheSameRemoteIdentifier' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItHasLocallyModifiedDataFields' time='0.024'/>
    <testcase classname='ZMConnectionTests' name='testThatItInsertsNewSentConnections' time='0.031'/>
    <testcase classname='ZMConnectionTests' name='testThatItParsesStatuses' time='0.030'/>
    <testcase classname='ZMConnectionTests' name='testThatItResetsConnectionWhenItIsCancelled' time='0.026'/>
    <testcase classname='ZMConnectionTests' name='testThatItReturnsNilForInvalidConversationUUID' time='0.030'/>
    <testcase classname='ZMConnectionTests' name='testThatItReturnsNilForInvalidToUUID' time='0.036'/>
    <testcase classname='ZMConnectionTests' name='testThatItReturnsNilIfMandatoryFieldsAreEmpty' time='0.026'/>
    <testcase classname='ZMConnectionTests' name='testThatItReturnsTheListOfAllConnectionsInTheUserSession' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItSetsTheConversationType_Connection_ForConnectionStatus_Cancelled' time='0.024'/>
    <testcase classname='ZMConnectionTests' name='testThatItSetsTheConversationType_Connection_ForConnectionStatus_Ignored' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItSetsTheConversationType_Connection_ForConnectionStatus_Pending' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItSetsTheConversationType_Connection_ForConnectionStatus_Sent' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItSetsTheConversationType_OneOnOne_ForConnectionStatus_Accepted' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatItTracksOnlyStatusKey' time='0.025'/>
    <testcase classname='ZMConnectionTests' name='testThatTheMessageTextIsCopied' time='0.023'/>
    <testcase classname='ZMConnectionTests' name='testThatWeCanSetAttributesOnConnection' time='0.108'/>
  </testsuite>
  <testsuite name='ZMConversationListDirectoryTests' tests='12' failures='0'>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItKeepsReturningTheSameObject' time='0.054'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItNotReturnsClearedConversationsWhenNoClearedEventIDButOnlyClearedTimeStampIsSet' time='0.043'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItNotReturnsClearedConversationsWhenNoClearedTimeStampButOnlyClearedEventIDIsSet' time='0.042'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsActiveCallConversations' time='0.041'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsAllConversations' time='0.043'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsArchivedConversations' time='0.042'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsClearedConversations' time='0.043'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsClearedConversationsWhenNoClearedEventIDButOnlyClearedTimeStampIsSet' time='0.043'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsClearedConversationsWhenNoClearedTimeStampButOnlyClearedEventIDIsSet' time='0.043'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsNonIdleVoiceChannelConversations' time='0.043'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsPendingConversations' time='0.042'/>
    <testcase classname='ZMConversationListDirectoryTests' name='testThatItReturnsUnarchivedConversations' time='0.041'/>
  </testsuite>
  <testsuite name='ZMConversationListTests' tests='19' failures='0'>
    <testcase classname='ZMConversationListTests' name='testThatAConversationWithActiveVoicecallisAlwaysOnTop' time='0.053'/>
    <testcase classname='ZMConversationListTests' name='testThatAddingMessageToClearedConversationMovesItToActiveConversationsList' time='0.031'/>
    <testcase classname='ZMConversationListTests' name='testThatClearingConversationMovesItToClearedList' time='0.032'/>
    <testcase classname='ZMConversationListTests' name='testThatItDoesNotReturnIgnoredConnections' time='0.024'/>
    <testcase classname='ZMConversationListTests' name='testThatItDoesNotReturnTheSelfConversation' time='0.024'/>
    <testcase classname='ZMConversationListTests' name='testThatItReturnsAllArchivedConversations' time='0.024'/>
    <testcase classname='ZMConversationListTests' name='testThatItReturnsAllConversations' time='0.036'/>
    <testcase classname='ZMConversationListTests' name='testThatItReturnsAllUnarchivedConversations' time='0.025'/>
    <testcase classname='ZMConversationListTests' name='testThatItReturnsConversationsSorted' time='0.025'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewAConversationIsArchived' time='0.030'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewAUserIsUnblocked' time='0.028'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewConnectionIsAccepted' time='0.030'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewConnectionIsCancelled' time='0.028'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewConnectionIsIgnored' time='0.029'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewConversationLastModifiedChangesThroughTheNotificationDispatcher' time='0.027'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenNewConversationsAreInserted' time='0.031'/>
    <testcase classname='ZMConversationListTests' name='testThatItUpdatesWhenTwoNewConnectionsAreAccepted' time='0.033'/>
    <testcase classname='ZMConversationListTests' name='testThatTheSortedIsAffected' time='0.018'/>
    <testcase classname='ZMConversationListTests' name='testThatTheSortedIsNotAffected' time='0.016'/>
  </testsuite>
  <testsuite name='ZMConversationMessageWindowTests' tests='16' failures='0'>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowDoesMoveUpUntilTheSizeIsOneAndNoMore' time='0.024'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowDoesNotMoveUpWhenAlreadyAtTheFirst' time='0.025'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowHasLessMessagesThanTheWindowSizeIfTheConversationHasLessMessages' time='0.022'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowIsEmptyIfThereIsALastReadEventIDButNoMessages' time='0.020'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowMatchesTheEntireConversationIsTheLastReadIsTheFirstMessage' time='0.024'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowMatchesTheSizeIfLastReadIsTheLastEvent' time='0.022'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowMatchesTheSizeIfThereIsNoLastRead' time='0.030'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowMatchesTheSizeStartingFromLastRead' time='0.023'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowMovesDownAndNotifiesOfScrolling' time='0.024'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAConversationWindowMovesUp' time='0.025'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatAddingAMessageAtTheEndDoesNotPopMessagesOffTheTopIfTheWindowFitsAllMessages' time='0.025'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatScrollingTheWindowUpCausesAScrollingNotification' time='0.025'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatScrollingTheWindowUpDoesNotCauseAScrollingNotificationIfTheWindowDidNotChange' time='0.135'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatUnsentPendingMessagesAreNotHiddenWhenTheConversationIsCleared' time='0.023'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatWhenAddingAMessageBeforeTheWindowTheWindowHasTheSameMessages' time='0.023'/>
    <testcase classname='ZMConversationMessageWindowTests' name='testThatWhenAddingAMessageInsideTheWindowTheWindowGrows' time='0.023'/>
  </testsuite>
  <testsuite name='ZMConversationTests' tests='306' failures='0'>
    <testcase classname='ZMConversationTests' name='testPerformanceOfLastReadMessage_IsOneOfFirst' time='1.226'/>
    <testcase classname='ZMConversationTests' name='testPerformanceOfLastReadMessage_IsOneOfLast' time='1.191'/>
    <testcase classname='ZMConversationTests' name='testPerformanceOfLastReadMessage_Middle' time='1.399'/>
    <testcase classname='ZMConversationTests' name='testThat_UnarchiveConversationFromEvent_DoesNotUnarchive_AConversation_WhenItIsSilenced' time='0.102'/>
    <testcase classname='ZMConversationTests' name='testThat_UnarchiveConversationFromEvent_unarchivesAConversationAndSetsLocallyModifications' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatActiveParticipantsContainsSelf' time='0.047'/>
    <testcase classname='ZMConversationTests' name='testThatAddingAParticipantDoesNotSetThe_unsyncedInactiveParticipants_flag' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatAddingParticipantsSetsTheModifiedKeys' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatAGroupConversationWhereTheUserIsActiveIsNotReadOnly' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatAGroupConversationWhereTheUserIsNotActiveIsReadOnly' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatAllParticipantsReturnsTheUnionOfActiveParticipantsAndInactiveParticipans' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatAnInvalidConversationIsReadOnly' time='0.029'/>
    <testcase classname='ZMConversationTests' name='testThatAOneToOneConversationIsNotReadOnly' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatAPendingConnectionConversationIsReadOnly' time='0.030'/>
    <testcase classname='ZMConversationTests' name='testThatAppendingNewConversationSystemMessageTwiceDoesNotCreateTwoSystemMessage' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatArchivingAConversationSetsTheArchivedTimestamp' time='0.029'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistoryAddsAllPreviousEventsToDownloadedEvents' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistoryDeletesAllMessages' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistorySetsClearedEventID' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistorySetsClearedTimeStampToLastServerTimeStamp' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistorySetsIsArchived' time='0.030'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistorySetsLastReadServerTimeStampToLastServerTimeStamp' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatClearingMessageHistorySetsLastReadToLastEventID' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatContinuedUsingDeviceSystemMessageAppendedAfterLastMessage' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatConversationByUUIDDoesNotFilterOutConversationsOfInvalidType' time='0.030'/>
    <testcase classname='ZMConversationTests' name='testThatConversationInitialSecurityLevelIsNotSecured' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsExpiredMessageWhenItHasExpiredMessageAndLowerPriorityEvents' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsKnockWhenItHasUnreadAndKnock' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsMissedCallWhenItHasMissedCallAndLowerPriorityEvents' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsNoneByDefault' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsPendingConversationWhenItIsAPendingConnectionAndItHasLowerPriorityEvents' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsUnreadMessageWhenItHasUnread' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatConversationListIndicatorIsVoiceActiveWhenItHasActiveVoiceChannelAndLowerPriorityEvents' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatConversationsDoNotGetInsertedUpstreamUnlessTheyAreGroupConversations' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatConversationsDoNotGetUpdatedUpstreamIfTheyDoNotHaveARemoteIdentifier' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatConversationsDoNotGetUpdatedUpstreamWhenTheyAreInvalidOrConnectionConversations' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatExistingOneOnOneConversationWithUserReturnsNilIfNotConnected' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatExistingOneOnOneConversationWithUserReturnsTheConnectionConversation' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatFirstGapIncludesAllEventIDs' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatFirstGapReturnsNilWithNoLastEvent' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatGettingRemovedIsNotMovingConversationToClearedList' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatHasDraftMessageTextReturnsNOWhenEmpty' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatHasDraftMessageTextReturnsYESWhenNotEmpty' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatIncreasesSecurityLevelOfCreatedGroupConversationWithAllParticipantsAlreadyTrusted' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatInctiveParticipantsContainsSelf' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatInsertATextMessageWithNilTextDoesNotCreateANewMessage' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatIsActiveMemberIsFalseWhenUpdatingFromTransportData' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatIsActiveMemberIsTrueWhenUpdatingFromTransportData' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatIsInvitationConversationReturnsFalseIfItHasNoConnection' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatIsInvitationConversationReturnsFalseIfItHasTheWrongConnectionStatus' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatIsInvitationConversationReturnsTrueIfItHasAPendingConnection' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatIt_DoesNot_ReturnClearedConversationsInWhichSelfIs_Not_ActiveMember_SearchStringPredicate' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItAddsCallDeviceIsActiveToLocallyModifiedKeysIfHasLocalModificationsForCallDeviceIsActiveIsSet' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItAddsNewTimeStampsToTheEndIfTheyAreNewerThanTheLastUnread' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItAddsParticipants' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItAddsRangeToDownloadedEventIDs' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItAddsTimeStamps' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatItAddsToDownloadedEventIDs' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItAppendsASystemMessageOfGeneralTypeForCBErrorCodeInvalidMessage' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItAppendsASystemMessageOfTypeRemoteIDChangedForCBErrorCodeRemoteIdentityChanged' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItCanInsertAKnock' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItCanRemoveTheSelfUser' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItCanSet_unsyncedInactiveParticipants_withoutThrowingAnException' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItCorrectlySetsNeedUpdatingUsersFlagOnPotentialGapSystemMessage' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItCountsArchivedConversationsWithUnreadMessagesAsUnread' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItCountsConversationsWithPendingConnectionAsUnread' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItCountsConversationsWithUnreadMessagesAsUnread_IfItHasUnread' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItCreatesAMessageWithLongText' time='0.075'/>
    <testcase classname='ZMConversationTests' name='testThatItCreatesAUserForNonExistingUUID' time='0.030'/>
    <testcase classname='ZMConversationTests' name='testThatItDecreaseSecurityLevelIfSomeOfTheClientsIsIgnored' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatItDeletesCachedValueForLastEventIDAfterAwakingFromSnapshotEvents' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatItDeletesCachedValueForLastReadEventIDAfterAwakingFromSnapshotEvents' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatItDeletesCachedValueForRemoteIDAfterAwakingFromSnapshotEvents' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItDetectsTheSelfConversationRemoteID' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotAddTheSelfUserToServerSyncedActiveParticipants' time='0.032'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotAllowAddingParticipantsToAOneOnOneConversation' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotAllowRemovingPaticipantsFromAOneOnOneConversation' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotClearHasUnreadKnockWhenKnockMessageIsNewerThanLastReadMessage' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotClearHasUnreadMissedCallWhenMissedCallMessageIsNewerThanLastReadMessage' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCountBlockedConversationsAsUnread' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCountConversationsThatAreClearedAsUnread' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCountConversationsWithSentConnectionAsUnread' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCountConversationsWithUnreadMessagesAsUnread_IfItHasNoUnread' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCountIgnoredConversationsAsUnread' time='0.047'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCountSilencedConversationsEvenWithUnreadContentAsUnread' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotCreateTheSelfConversationOnTheSyncMoc' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotDecreaseSecurityLevelIfItIsInPartialSecureLevel' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotFilterClearedConversationsThatAreNotArchived_IncludingArchivedPredicate' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotFilterOut_Cleared_Archived_Conversations_WithNewMessages_IncludingArchivedPredicate' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotFilterOut_NotCleared_Archived_Conversations_IncludingArchivedPredicate' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotFindAConversationThatDoesNotStartWithButContainsTheSearchString' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotFindAOneOnOneConversationByUserDefinedName' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNothingForUnknownParticipants' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotIncreaseSecurityLevelIfNotAllClientsAreTrusted' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotIncreaseSecurityLevelIfNotAllUsersHaveClients' time='0.044'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotIncreaseSecurityLevelOfCreatedGroupConversationWithAllParticipantsIfNotAlreadyTrusted' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotIncreaseTheSecurityLevelIfAConversationContainsUsersWithoutAConnection' time='0.044'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotRejectNonWhitespaceOnlyText' time='0.067'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotRemovesAMessageWhenItReceivesADeletionMessageNotFromSelfUser' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotRemovesAMessageWhenItReceivesADeletionMessageNotInTheSelfConversation' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotRemovesANonExistingMessageWhenItReceivesADeletionMessage' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotReturnANonExistingUserByUUID' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotSetHasUnreadWhenTheSystemMessageTypeIsNotOfMissedCall' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotTouchTheMessagesRelationWhenItIsAlreadySorted' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdateClearedTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_LastRead_IsNOT_LastEvent_NoTimeStamp' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdateLastModifiedDateWithLocalSystemMessages' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdateLastReadTimeStampWhenWithoutTimeStamp' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdatesLastModifiedDateWithMessageServerTimestampIfNotNeeded_ClientMessage' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdatesLastModifiedDateWithMessageServerTimestampIfNotNeeded_PlaintextMessage' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdateTheClearedTimeStampWhenUpdatingTheEventIDConversationMetaData_ClearedIsNOTLastEvent' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdateTheLastReadMessageIfTheVisibleWindowIsNil' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotUpdateTheLastReadMessageToAnOlderMessage' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotValidateOnSyncContext_1' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItDoesNotValidateOnSyncContext_2' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItFetchesConversationsWithCallStateNeededToBeSynced' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItFetchesMessagesAndSetsTheUnreadCountAfterSortingMessages' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItFetchesSharableConversations' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItFiltersOut_SelfConversation' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItFiltersOutArchivedAndClearedConversations_IncludingArchivedPredicate' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItFindsConversationByUserDefinedName' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItFindsConversationsWithMatchingUserNameOrMatchingUserDefinedName' time='0.075'/>
    <testcase classname='ZMConversationTests' name='testThatItFindsConversationsWithUserDefinedNameByParticipantName' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItFindsConversationsWithUserDefinedNameByParticipantName_SecondSearchComponent' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItHasLocallyModifiedDataFields' time='0.031'/>
    <testcase classname='ZMConversationTests' name='testThatItIncreasesSecurityLevelIfAllClientsInConversationAreTrusted' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItInsertsANewConversation' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItInsertsANewConversationInUIContext' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItInsertsANewConversationInUserSession' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItInsertsEncryptedImageMessages' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItInsertsEncryptedKnockMessages' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItInsertsEncryptedTextMessages' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItIsSafeToPassInAMutableStringWhenCreatingATextMessage' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItIsSafeToPassInMutableDataWhenCreatingAnImageMessage' time='0.048'/>
    <testcase classname='ZMConversationTests' name='testThatItMovesAParticipantFromActiveToInactive' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItNotifiesWhenAllClientAreVerified' time='0.047'/>
    <testcase classname='ZMConversationTests' name='testThatItOnlyFindsConversationsWithAllComponents' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItOnlyValidatesChangesOnUIContext' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItPersistsUnsyncedActiveParticipants' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItPersistsUnsyncedInactiveParticipants' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesActiveParticipantsWhenIsSelfActiveUserKeyChanges' time='0.053'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesActiveParticipantsWhenOtherActiveParticipantsKeyChanges' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesHasDraftMessageWhenDraftMessageTextChanges' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesInactiveParticipantsWhenIsSelfActiveUserKeyChanges' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesInactiveParticipantsWhenOtherActiveParticipantsChanges' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesIsPendingConnectionWhenConnectionChanges' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesIsPendingConnectionWhenConnectionStatusChanges' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesIsReadOnlyWhenConversationTypeChanges' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesIsReadOnlyWhenIsSelfActiveMemberChanges' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesLastReadMessageWhenLastReadServerTimeStampChanges' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItRecalculatesLastReadMessageWhenMessagesChanges' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItRejectsWhitespaceOnlyText' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItRemovesAndAppendsTheMessageWhenResortingWithUpdatedMessage' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItRemovesAParticipantFromInactiveParticipantsWhenAddingAgain' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatItRemovesFileAssetsWhenItReceivesADeletionMessage' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatItRemovesImageAssetsWhenItReceivesADeletionMessage' time='0.053'/>
    <testcase classname='ZMConversationTests' name='testThatItRemovesTheMessageWhenItReceivesAHidingMessage' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItReplacesNewlinesAndTabWithSpaces' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItResetsHasUnreadUnsentMessage' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatItResetsHasUnreadUnsentMessageWhenThereAreAdditionalSentMessages' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItResetsModificationsToActiveParticipants' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItResetsModificationsToInactiveParticipants' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItReturns_HasUntrustedClients_NO_ifThereAreNoOtherClients' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItReturns_HasUntrustedClients_NO_ifThereAreNoOtherUsers' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItReturns_HasUntrustedClients_NO_ifThereAreNoUntrustedClients' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatItReturns_HasUntrustedClients_YES_ifThereAreUntrustedClients' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsAllParticipantsAsActiveParticipantsInConnectionConversations' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsAllParticipantsAsActiveParticipantsInOneOnOneConversations' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsAnExistingConversationByUUID' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsAnExistingConversationByUUIDEvenIfTheTypeIsInvalid' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsClearedConversationsInWhichSelfIsActiveMember_SearchStringPredicate' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsConversationsInWhichSelfIs_Not_ActiveMember_NotCleared_SearchStringPredicate' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsNilIfTheLastReadEventIsOlderThanTheFirstMessageServerTimeStamp' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsSelfUserAsActiveParticipantsInSelfConversations' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheConnectionMessage' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheLastMessageIfTheLastReadServerTimeStampIsBiggerThanTheLastMessageServerTimeStamp' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheLastReadMessageIfWeHaveItLocally' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheListOfAllConversationsInTheUserSession' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheListOfAllConversationWithASave' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheListOfAllConversationWithoutASave' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsTheListOfAllincomingConnectionConversationsConnectionsInTheUserSession' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItReturnsThePreviousMessageIfTheLastReadServerTimeStampIsNoMessage' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItRollsBackIfTheUserDefinedNameIsTooLong' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItSavesTheLastReadServerTimeStampBeforeDelayedDispatchEnds' time='2.037'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsHasLocalModificationsForLastReadServerTimeStampWhenSettingLastRead' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsHasUnreadKnockToNoWhenLastReadEqualsLastEventID' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsHasUnreadMissedCallToNoWhenLastReadEqualsLastEventID' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsNormalizedNameWhenSettingName' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsTheExpirationDateOnATextMessage' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsTheLastModifiedDateToNowWhenInsertingAGroupConversationFromTheUI' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsTheLastReadServerTimeStampToTheLastEventAfterTheLastMessage' time='0.231'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsTheLastReadServerTimeStampToTheLastReadMessageInTheVisibleRange' time='0.231'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsTheSelfUserAsCreatorWhenCreatingAGroupConversationFromTheUI' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItSetsZMIsDimmedAttributeOnInactiveUsers' time='0.119'/>
    <testcase classname='ZMConversationTests' name='testThatItSortInsertsTimeStamps' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItSortsParticipantsByFullName' time='0.061'/>
    <testcase classname='ZMConversationTests' name='testThatItSortsTheConversationBasedOnServerTimestamp' time='0.054'/>
    <testcase classname='ZMConversationTests' name='testThatItSortsTimeStampsWhenFetchingMessages' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatItTrimmsTheUserDefinedNameForLeadingAndTrailingWhitespace' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesClearedTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_LastRead_Is_LastEvent' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesFirstNewClientSystemMessage' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesItselfFromTransportData' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesItselfFromTransportDataForGroupConversation' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesItselfFromTransportInvalidFields' time='0.048'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesItselfFromTransportInvalidOthersMembers' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesItselfFromTransportMissingOthers' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesItselfFromTransportMissingSelf' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesLastModifiedDateWithMessageServerTimestamp_ClientMessage' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesLastModifiedDateWithMessageServerTimestamp_PlaintextMessage' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheClearedTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_PassedTimeStamp' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheClearedTimeStampWhenUpdatingTheEventIDConversationMetaData_ClearedIsLastEvent' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheConversationWhenItReceivesALastReadMessage' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheLastModificationDateWhenInsertingMessages' time='0.044'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheLastModificationDateWhenInsertingMessagesIntoAnEmptyConversation' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheLastReadServerTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_LastRead_Is_LastEvent' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheLastReadServerTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_PassedTimeStamp' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesTheUnreadCount' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatItUpdatesWithoutCrashesFromTransportMissingFields' time='0.047'/>
    <testcase classname='ZMConversationTests' name='testThatItUsesServerTimestampWhenResortingWithUpdatedMessage' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatItValidatesNilValuesAsValid' time='0.044'/>
    <testcase classname='ZMConversationTests' name='testThatLastClearedUpdatesInSelfConversationDontExpire' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatLastModifiedDateOfTheConversationGetsUpdatedWhenAMessageIsInserted' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatLastReadUpdatesInSelfConversationDontExpire' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatLeavingAConversationMarksItAsArchived' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatNoMessageIsInsertedWhenTheImageDataIsNotAnImage' time='0.065'/>
    <testcase classname='ZMConversationTests' name='testThatNoMessageIsInsertedWhenTheImageFileURLIsNotAFileURL' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatNoMessageIsInsertedWhenTheImageFileURLIsNotPointingToAFile' time='0.137'/>
    <testcase classname='ZMConversationTests' name='testThatNoMessageIsInsertedWhenTheImageFileURLIsPointingToSomethingThatIsNotAnImage' time='0.211'/>
    <testcase classname='ZMConversationTests' name='testThatOtherActiveParticipantsDoesNotContainSelf' time='0.236'/>
    <testcase classname='ZMConversationTests' name='testThatOtherInactiveParticipantsDoesNotContainSelf' time='0.049'/>
    <testcase classname='ZMConversationTests' name='testThatPendingConversationsAreUpdatedUpstream' time='0.097'/>
    <testcase classname='ZMConversationTests' name='testThatRemovingAParticipantDoesNotSetThe_unsyncedActiveParticipants_flag' time='0.288'/>
    <testcase classname='ZMConversationTests' name='testThatRemovingOthersInConversationDoesntClearsMessages' time='0.106'/>
    <testcase classname='ZMConversationTests' name='testThatRemovingParticipantsSetsTheModifiedKeys' time='0.061'/>
    <testcase classname='ZMConversationTests' name='testThatSettingClearedTimeStampDueToRemoteChangeDoesNotDeleteUnsentMessages' time='1.051'/>
    <testcase classname='ZMConversationTests' name='testThatSettingClearedTimeStampDueToRemoteChangeOnlyDeletesOlderMessages_EventIsNotMessage' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatSettingTheUseDefinedNameDoesNotMakeTheNormalizedUserDefinedNameIsLocallyModified' time='0.056'/>
    <testcase classname='ZMConversationTests' name='testThatSetVisibleWindowFiresANotification' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatSetVisibleWindowFiresANotificationWithEvent1WithoutEventID' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatSetVisibleWindowFiresANotificationWithEvent2WithoutEventID' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatSetVisibleWindowFiresANotificationWithInvertedMessageOrder' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatSetVisibleWindowFiresANotificationWithMissingLowerEvent' time='0.092'/>
    <testcase classname='ZMConversationTests' name='testThatSetVisibleWindowFiresANotificationWithMissingUpperEvent' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeys' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatSystemMessageAppendedToAEmptyConversationStillHasATimestamp' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatTheAttributedDisplayNameBasedOnUserNamesIncludesInactive' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatTheConnectedUserIsNilForGroupConversation' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatTheConnectedUserIsNilForSelfconversation' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatTheConnectionConversationLastModifiedDateIsSet' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatTheConversationIsNotArchivedByDefault' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatTheConversationIsNotSilencedByDefault' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatTheConversationListFiltersOutConversationOfInvalidType' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatTheDefaultGapWindowIncludesLastReadIDAndLastEventID' time='0.048'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameBasedOnUserNamesDoesNotIncludeUsersWithAnEmptyName' time='0.058'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameForDeletedUserIsEllipsis' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsAlwaysTheOtherparticipantsNameInOneOnOneConversations' time='0.060'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsEllipsisWhenTheOtherUsersNameForAConnectionRequestIsEmpty' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheConnectedUserNameWhenItIsAOneOnOneConversationWithoutOtherActiveParticipants' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheConnectedUserNameWhenItIsAPendingConnectionConversation' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheConnectedUserNameWhenItIsASentConnectionConversation' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheOtherUser' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheOtherUsersNameForAConnectionRequest' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheOtherUsersNameWhenTheUserDefinedNameIsNotSet' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheUserDefinedNameWhenSetInAGroupConversation' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameIsTheUserDefinedNameWhenThereAreNoOtherParticipants' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatTheDisplayNameOnlyContainsTheActiveUsers' time='0.040'/>
    <testcase classname='ZMConversationTests' name='testThatTheDraftTextIsCopied' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatTheEventCalculatedWithTheLeadingWindowBleedIsNotActuallyExpectedToBeDownloaded' time='0.067'/>
    <testcase classname='ZMConversationTests' name='testThatTheGapDoesNotIncludeMessagesThatAreDownloaded' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatTheGapIncludesTheVisibleWindowAndLastReadAndLastEvent' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatTheNormalizedUserDefinedNameIsCopied' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatThereIsNoGapForAnEmptyConversation' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatThereIsNoGapWhenLastReadIsSetButLastEventIsNotSet' time='0.035'/>
    <testcase classname='ZMConversationTests' name='testThatTheSelfConversationHasTheSameRemoteIdentifierAsTheSelfUser' time='0.033'/>
    <testcase classname='ZMConversationTests' name='testThatTheSelfConversationIsReadOnly' time='0.046'/>
    <testcase classname='ZMConversationTests' name='testThatTheUserDefinedNameIsCopied' time='0.034'/>
    <testcase classname='ZMConversationTests' name='testThatUnarchivingAConversationSetsTheArchivedChangedTimestamp' time='0.037'/>
    <testcase classname='ZMConversationTests' name='testThatUpdatingFromTransportDataDoesNotSetAnyLocalModifiedKey' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatUpdatingUsersFromTransportDataPreservesUnsyncedInactiveAndActiveParticipants' time='0.051'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertAFileMessage' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertALocationMessage' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertAnAudioMessage' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertAnImageMessageFromAFileURL' time='0.055'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertAnImageMessageFromImageData' time='0.041'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertATextMessage' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanInsertAVideoMessage' time='0.043'/>
    <testcase classname='ZMConversationTests' name='testThatWeCanSetAttributesOnConversation' time='0.083'/>
    <testcase classname='ZMConversationTests' name='testThatWeHaveAConnectedUserForConnectionConversation' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatWeHaveAConnectedUserForOneOnOneConversation' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAddingADownloadedClearedEventItSetsTheClearedTimeStamp' time='0.205'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAddingADownloadedLastReadEventItSetsTheLastReadTimeStamp' time='0.148'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAddingAnEventFollowingTheClearedEventItDoesNotSetTheClearedTimeStampIfNotNil' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAddingAnEventFollowingTheClearedEventItSetsTheClearedTimeStampIfNil' time='0.123'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAddingAParticipantItIsAddedToTheListOfUnsyncedActiveParticipants' time='0.057'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAddingAParticipantThe_unsyncedActiveParticipants_propertyHasLocalModifications' time='0.044'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAParticipantHasBeenAddedOnTheClientAndTheServerWeDoSyncItAnymore' time='0.059'/>
    <testcase classname='ZMConversationTests' name='testThatWhenAParticipantHasBeenRemovedOnTheClientAndTheServerWeDoNotSyncItAnymore' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatWhenMovingAParticipantFromActiveToInactiveWeDoNotAddItAgain' time='0.044'/>
    <testcase classname='ZMConversationTests' name='testThatWhenMovingAParticipantFromInactiveToActiveWeDoNotRemoveItAgain' time='0.042'/>
    <testcase classname='ZMConversationTests' name='testThatWhenRemovingAParticipantItIsAddedToTheListOfUnsyncedInactiveParticipants' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatWhenRemovingAParticipantThe_unsyncedInactiveParticipants_propertyHasLocalModifications' time='0.045'/>
    <testcase classname='ZMConversationTests' name='testThatWhenResettingAnUnsyncedAddedUserItIsNotUnsyncedAnymore' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatWhenResettingAnUnsyncedUserItIsNotUnsyncedAnymore' time='0.038'/>
    <testcase classname='ZMConversationTests' name='testThatWhenSetNotToBeUpdatedFromBackendCallStateDoesNotChangeFromFalse' time='0.036'/>
    <testcase classname='ZMConversationTests' name='testThatWhenSetNotToBeUpdatedFromBackendCallStateDoesNotChangeFromTrue' time='0.039'/>
    <testcase classname='ZMConversationTests' name='testThatWhenSynchronizingAllAddedUsersThe_unsyncedActiveParticipants_changeFlagIsReset' time='0.047'/>
    <testcase classname='ZMConversationTests' name='testThatWhenSynchronizingAllRemovedUsersThe_unsyncedInactiveParticipants_changeFlagIsReset' time='0.044'/>
  </testsuite>
  <testsuite name='ZMConversationTests_Timestamp' tests='307' failures='0'>
    <testcase classname='ZMConversationTests_Timestamp' name='testPerformanceOfLastReadMessage_IsOneOfFirst' time='1.646'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testPerformanceOfLastReadMessage_IsOneOfLast' time='1.240'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testPerformanceOfLastReadMessage_Middle' time='1.413'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThat_UnarchiveConversationFromEvent_DoesNotUnarchive_AConversation_WhenItIsSilenced' time='0.036'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThat_UnarchiveConversationFromEvent_unarchivesAConversationAndSetsLocallyModifications' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatActiveParticipantsContainsSelf' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAddingAParticipantDoesNotSetThe_unsyncedInactiveParticipants_flag' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAddingParticipantsSetsTheModifiedKeys' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAGroupConversationWhereTheUserIsActiveIsNotReadOnly' time='0.035'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAGroupConversationWhereTheUserIsNotActiveIsReadOnly' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAllParticipantsReturnsTheUnionOfActiveParticipantsAndInactiveParticipans' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAnInvalidConversationIsReadOnly' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAOneToOneConversationIsNotReadOnly' time='0.036'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAPendingConnectionConversationIsReadOnly' time='0.036'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatAppendingNewConversationSystemMessageTwiceDoesNotCreateTwoSystemMessage' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatArchivingAConversationSetsTheArchivedTimestamp' time='0.036'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistoryAddsAllPreviousEventsToDownloadedEvents' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistoryDeletesAllMessages' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistorySetsClearedEventID' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistorySetsClearedTimeStampToLastServerTimeStamp' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistorySetsIsArchived' time='0.036'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistorySetsLastReadServerTimeStampToLastServerTimeStamp' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatClearingMessageHistorySetsLastReadToLastEventID' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatContinuedUsingDeviceSystemMessageAppendedAfterLastMessage' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationByUUIDDoesNotFilterOutConversationsOfInvalidType' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationInitialSecurityLevelIsNotSecured' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsExpiredMessageWhenItHasExpiredMessageAndLowerPriorityEvents' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsKnockWhenItHasUnreadAndKnock' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsMissedCallWhenItHasMissedCallAndLowerPriorityEvents' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsNoneByDefault' time='0.036'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsPendingConversationWhenItIsAPendingConnectionAndItHasLowerPriorityEvents' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsUnreadMessageWhenItHasUnread' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationListIndicatorIsVoiceActiveWhenItHasActiveVoiceChannelAndLowerPriorityEvents' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationsDoNotGetInsertedUpstreamUnlessTheyAreGroupConversations' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationsDoNotGetUpdatedUpstreamIfTheyDoNotHaveARemoteIdentifier' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatConversationsDoNotGetUpdatedUpstreamWhenTheyAreInvalidOrConnectionConversations' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatExistingOneOnOneConversationWithUserReturnsNilIfNotConnected' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatExistingOneOnOneConversationWithUserReturnsTheConnectionConversation' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatFirstGapIncludesAllEventIDs' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatFirstGapReturnsNilWithNoLastEvent' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatGettingRemovedIsNotMovingConversationToClearedList' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatHasDraftMessageTextReturnsNOWhenEmpty' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatHasDraftMessageTextReturnsYESWhenNotEmpty' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIncreasesSecurityLevelOfCreatedGroupConversationWithAllParticipantsAlreadyTrusted' time='0.065'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatInctiveParticipantsContainsSelf' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatInsertATextMessageWithNilTextDoesNotCreateANewMessage' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIsActiveMemberIsFalseWhenUpdatingFromTransportData' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIsActiveMemberIsTrueWhenUpdatingFromTransportData' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIsInvitationConversationReturnsFalseIfItHasNoConnection' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIsInvitationConversationReturnsFalseIfItHasTheWrongConnectionStatus' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIsInvitationConversationReturnsTrueIfItHasAPendingConnection' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatIt_DoesNot_ReturnClearedConversationsInWhichSelfIs_Not_ActiveMember_SearchStringPredicate' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAddsCallDeviceIsActiveToLocallyModifiedKeysIfHasLocalModificationsForCallDeviceIsActiveIsSet' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAddsNewTimeStampsToTheEndIfTheyAreNewerThanTheLastUnread' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAddsParticipants' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAddsRangeToDownloadedEventIDs' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAddsTimeStamps' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAddsToDownloadedEventIDs' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAppendsASystemMessageOfGeneralTypeForCBErrorCodeInvalidMessage' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItAppendsASystemMessageOfTypeRemoteIDChangedForCBErrorCodeRemoteIdentityChanged' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCanInsertAKnock' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCanRemoveTheSelfUser' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCanSet_unsyncedInactiveParticipants_withoutThrowingAnException' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCorrectlySetsNeedUpdatingUsersFlagOnPotentialGapSystemMessage' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCountsArchivedConversationsWithUnreadMessagesAsUnread' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCountsConversationsWithPendingConnectionAsUnread' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCountsConversationsWithUnreadMessagesAsUnread_IfItHasUnread' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCreatesAMessageWithLongText' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItCreatesAUserForNonExistingUUID' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDecreaseSecurityLevelIfSomeOfTheClientsIsIgnored' time='0.064'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDeletesCachedValueForLastEventIDAfterAwakingFromSnapshotEvents' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDeletesCachedValueForLastReadEventIDAfterAwakingFromSnapshotEvents' time='0.037'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDeletesCachedValueForRemoteIDAfterAwakingFromSnapshotEvents' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDetectsTheSelfConversationRemoteID' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotAddTheSelfUserToServerSyncedActiveParticipants' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotAllowAddingParticipantsToAOneOnOneConversation' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotAllowRemovingPaticipantsFromAOneOnOneConversation' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotClearHasUnreadKnockWhenKnockMessageIsNewerThanLastReadMessage' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotClearHasUnreadMissedCallWhenMissedCallMessageIsNewerThanLastReadMessage' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCountBlockedConversationsAsUnread' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCountConversationsThatAreClearedAsUnread' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCountConversationsWithSentConnectionAsUnread' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCountConversationsWithUnreadMessagesAsUnread_IfItHasNoUnread' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCountIgnoredConversationsAsUnread' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCountSilencedConversationsEvenWithUnreadContentAsUnread' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotCreateTheSelfConversationOnTheSyncMoc' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotDecreaseSecurityLevelIfItIsInPartialSecureLevel' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotFilterClearedConversationsThatAreNotArchived_IncludingArchivedPredicate' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotFilterOut_Cleared_Archived_Conversations_WithNewMessages_IncludingArchivedPredicate' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotFilterOut_NotCleared_Archived_Conversations_IncludingArchivedPredicate' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotFindAConversationThatDoesNotStartWithButContainsTheSearchString' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotFindAOneOnOneConversationByUserDefinedName' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNothingForUnknownParticipants' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotIncreaseSecurityLevelIfNotAllClientsAreTrusted' time='0.056'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotIncreaseSecurityLevelIfNotAllUsersHaveClients' time='0.062'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotIncreaseSecurityLevelOfCreatedGroupConversationWithAllParticipantsIfNotAlreadyTrusted' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotIncreaseTheSecurityLevelIfAConversationContainsUsersWithoutAConnection' time='0.056'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotRejectNonWhitespaceOnlyText' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotRemovesAMessageWhenItReceivesADeletionMessageNotFromSelfUser' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotRemovesAMessageWhenItReceivesADeletionMessageNotInTheSelfConversation' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotRemovesANonExistingMessageWhenItReceivesADeletionMessage' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotReturnANonExistingUserByUUID' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotSetHasUnreadWhenTheSystemMessageTypeIsNotOfMissedCall' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotTouchTheMessagesRelationWhenItIsAlreadySorted' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdateClearedTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_LastRead_IsNOT_LastEvent_NoTimeStamp' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdateLastModifiedDateWithLocalSystemMessages' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdateLastReadTimeStampWhenWithoutTimeStamp' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdatesLastModifiedDateWithMessageServerTimestampIfNotNeeded_ClientMessage' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdatesLastModifiedDateWithMessageServerTimestampIfNotNeeded_PlaintextMessage' time='0.106'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdateTheClearedTimeStampWhenUpdatingTheEventIDConversationMetaData_ClearedIsNOTLastEvent' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdateTheLastReadMessageIfTheVisibleWindowIsNil' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotUpdateTheLastReadMessageToAnOlderMessage' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotValidateOnSyncContext_1' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItDoesNotValidateOnSyncContext_2' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFetchesConversationsWithCallStateNeededToBeSynced' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFetchesMessagesAndSetsTheUnreadCountAfterSortingMessages' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFetchesSharableConversations' time='0.056'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFiltersOut_SelfConversation' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFiltersOutArchivedAndClearedConversations_IncludingArchivedPredicate' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFindsConversationByUserDefinedName' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFindsConversationsWithMatchingUserNameOrMatchingUserDefinedName' time='0.050'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFindsConversationsWithUserDefinedNameByParticipantName' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItFindsConversationsWithUserDefinedNameByParticipantName_SecondSearchComponent' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItHasLocallyModifiedDataFields' time='0.038'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItIncreasesSecurityLevelIfAllClientsInConversationAreTrusted' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItInsertsANewConversation' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItInsertsANewConversationInUIContext' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItInsertsANewConversationInUserSession' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItInsertsEncryptedImageMessages' time='0.074'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItInsertsEncryptedKnockMessages' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItInsertsEncryptedTextMessages' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItIsSafeToPassInAMutableStringWhenCreatingATextMessage' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItIsSafeToPassInMutableDataWhenCreatingAnImageMessage' time='0.056'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItMovesAParticipantFromActiveToInactive' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItNotifiesWhenAllClientAreVerified' time='0.057'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItOnlyFindsConversationsWithAllComponents' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItOnlyValidatesChangesOnUIContext' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItPersistsUnsyncedActiveParticipants' time='0.055'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItPersistsUnsyncedInactiveParticipants' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesActiveParticipantsWhenIsSelfActiveUserKeyChanges' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesActiveParticipantsWhenOtherActiveParticipantsKeyChanges' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesHasDraftMessageWhenDraftMessageTextChanges' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesInactiveParticipantsWhenIsSelfActiveUserKeyChanges' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesInactiveParticipantsWhenOtherActiveParticipantsChanges' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesIsPendingConnectionWhenConnectionChanges' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesIsPendingConnectionWhenConnectionStatusChanges' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesIsReadOnlyWhenConversationTypeChanges' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesIsReadOnlyWhenIsSelfActiveMemberChanges' time='0.040'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesLastReadMessageWhenLastReadServerTimeStampChanges' time='0.087'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRecalculatesLastReadMessageWhenMessagesChanges' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRejectsWhitespaceOnlyText' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRemovesAndAppendsTheMessageWhenResortingWithUpdatedMessage' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRemovesAParticipantFromInactiveParticipantsWhenAddingAgain' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRemovesFileAssetsWhenItReceivesADeletionMessage' time='0.139'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRemovesImageAssetsWhenItReceivesADeletionMessage' time='0.190'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRemovesTheMessageWhenItReceivesAHidingMessage' time='0.050'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReplacesNewlinesAndTabWithSpaces' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItResetsHasUnreadUnsentMessage' time='0.061'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItResetsHasUnreadUnsentMessageWhenThereAreAdditionalSentMessages' time='0.057'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItResetsModificationsToActiveParticipants' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItResetsModificationsToInactiveParticipants' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturns_HasUntrustedClients_NO_ifThereAreNoOtherClients' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturns_HasUntrustedClients_NO_ifThereAreNoOtherUsers' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturns_HasUntrustedClients_NO_ifThereAreNoUntrustedClients' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturns_HasUntrustedClients_YES_ifThereAreUntrustedClients' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsAllParticipantsAsActiveParticipantsInConnectionConversations' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsAllParticipantsAsActiveParticipantsInOneOnOneConversations' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsAnExistingConversationByUUID' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsAnExistingConversationByUUIDEvenIfTheTypeIsInvalid' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsClearedConversationsInWhichSelfIsActiveMember_SearchStringPredicate' time='0.050'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsConversationsInWhichSelfIs_Not_ActiveMember_NotCleared_SearchStringPredicate' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsNilIfTheLastReadEventIsOlderThanTheFirstMessageServerTimeStamp' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsSelfUserAsActiveParticipantsInSelfConversations' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheConnectionMessage' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheLastMessageIfTheLastReadServerTimeStampIsBiggerThanTheLastMessageServerTimeStamp' time='0.041'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheLastReadMessageIfWeHaveItLocally' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheListOfAllConversationsInTheUserSession' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheListOfAllConversationWithASave' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheListOfAllConversationWithoutASave' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsTheListOfAllincomingConnectionConversationsConnectionsInTheUserSession' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItReturnsThePreviousMessageIfTheLastReadServerTimeStampIsNoMessage' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItRollsBackIfTheUserDefinedNameIsTooLong' time='0.055'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSavesTheLastReadServerTimeStampBeforeDelayedDispatchEnds' time='2.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSendsANotificationWhenSettingTheLastRead' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsHasLocalModificationsForLastReadServerTimeStampWhenSettingLastRead' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsHasUnreadKnockToNoWhenLastReadEqualsLastEventID' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsHasUnreadMissedCallToNoWhenLastReadEqualsLastEventID' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsNormalizedNameWhenSettingName' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsTheExpirationDateOnATextMessage' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsTheLastModifiedDateToNowWhenInsertingAGroupConversationFromTheUI' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsTheLastReadServerTimeStampToTheLastEventAfterTheLastMessage' time='0.241'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsTheLastReadServerTimeStampToTheLastReadMessageInTheVisibleRange' time='0.242'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsTheSelfUserAsCreatorWhenCreatingAGroupConversationFromTheUI' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSetsZMIsDimmedAttributeOnInactiveUsers' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSortInsertsTimeStamps' time='0.039'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSortsParticipantsByFullName' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSortsTheConversationBasedOnServerTimestamp' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItSortsTimeStampsWhenFetchingMessages' time='0.055'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItTrimmsTheUserDefinedNameForLeadingAndTrailingWhitespace' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesClearedTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_LastRead_Is_LastEvent' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesFirstNewClientSystemMessage' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesItselfFromTransportData' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesItselfFromTransportDataForGroupConversation' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesItselfFromTransportInvalidFields' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesItselfFromTransportInvalidOthersMembers' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesItselfFromTransportMissingOthers' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesItselfFromTransportMissingSelf' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesLastModifiedDateWithMessageServerTimestamp_ClientMessage' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesLastModifiedDateWithMessageServerTimestamp_PlaintextMessage' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheClearedTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_PassedTimeStamp' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheClearedTimeStampWhenUpdatingTheEventIDConversationMetaData_ClearedIsLastEvent' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheConversationWhenItReceivesALastReadMessage' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheLastModificationDateWhenInsertingMessages' time='0.058'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheLastModificationDateWhenInsertingMessagesIntoAnEmptyConversation' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheLastReadServerTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_LastRead_Is_LastEvent' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheLastReadServerTimeStampWhenUpdatingTheEventIDByMemberUpdateEvent_PassedTimeStamp' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesTheUnreadCount' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUpdatesWithoutCrashesFromTransportMissingFields' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItUsesServerTimestampWhenResortingWithUpdatedMessage' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatItValidatesNilValuesAsValid' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatLastClearedUpdatesInSelfConversationDontExpire' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatLastModifiedDateOfTheConversationGetsUpdatedWhenAMessageIsInserted' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatLastReadUpdatesInSelfConversationDontExpire' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatLeavingAConversationMarksItAsArchived' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatNoMessageIsInsertedWhenTheImageDataIsNotAnImage' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatNoMessageIsInsertedWhenTheImageFileURLIsNotAFileURL' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatNoMessageIsInsertedWhenTheImageFileURLIsNotPointingToAFile' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatNoMessageIsInsertedWhenTheImageFileURLIsPointingToSomethingThatIsNotAnImage' time='0.076'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatOtherActiveParticipantsDoesNotContainSelf' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatOtherInactiveParticipantsDoesNotContainSelf' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatPendingConversationsAreUpdatedUpstream' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatRemovingAParticipantDoesNotSetThe_unsyncedActiveParticipants_flag' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatRemovingOthersInConversationDoesntClearsMessages' time='0.054'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatRemovingParticipantsSetsTheModifiedKeys' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSettingClearedTimeStampDueToRemoteChangeDoesNotDeleteUnsentMessages' time='1.062'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSettingClearedTimeStampDueToRemoteChangeOnlyDeletesOlderMessages_EventIsNotMessage' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSettingTheUseDefinedNameDoesNotMakeTheNormalizedUserDefinedNameIsLocallyModified' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSetVisibleWindowFiresANotification' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSetVisibleWindowFiresANotificationWithEvent1WithoutEventID' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSetVisibleWindowFiresANotificationWithEvent2WithoutEventID' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSetVisibleWindowFiresANotificationWithInvertedMessageOrder' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSetVisibleWindowFiresANotificationWithMissingLowerEvent' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSetVisibleWindowFiresANotificationWithMissingUpperEvent' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeys' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatSystemMessageAppendedToAEmptyConversationStillHasATimestamp' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheAttributedDisplayNameBasedOnUserNamesIncludesInactive' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheConnectedUserIsNilForGroupConversation' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheConnectedUserIsNilForSelfconversation' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheConnectionConversationLastModifiedDateIsSet' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheConversationIsNotArchivedByDefault' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheConversationIsNotSilencedByDefault' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheConversationListFiltersOutConversationOfInvalidType' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDefaultGapWindowIncludesLastReadIDAndLastEventID' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameBasedOnUserNamesDoesNotIncludeUsersWithAnEmptyName' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameForDeletedUserIsEllipsis' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsAlwaysTheOtherparticipantsNameInOneOnOneConversations' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsEllipsisWhenTheOtherUsersNameForAConnectionRequestIsEmpty' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheConnectedUserNameWhenItIsAOneOnOneConversationWithoutOtherActiveParticipants' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheConnectedUserNameWhenItIsAPendingConnectionConversation' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheConnectedUserNameWhenItIsASentConnectionConversation' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheOtherUser' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheOtherUsersNameForAConnectionRequest' time='0.050'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheOtherUsersNameWhenTheUserDefinedNameIsNotSet' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheUserDefinedNameWhenSetInAGroupConversation' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameIsTheUserDefinedNameWhenThereAreNoOtherParticipants' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDisplayNameOnlyContainsTheActiveUsers' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheDraftTextIsCopied' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheEventCalculatedWithTheLeadingWindowBleedIsNotActuallyExpectedToBeDownloaded' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheGapDoesNotIncludeMessagesThatAreDownloaded' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheGapIncludesTheVisibleWindowAndLastReadAndLastEvent' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheNormalizedUserDefinedNameIsCopied' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatThereIsNoGapForAnEmptyConversation' time='0.042'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatThereIsNoGapWhenLastReadIsSetButLastEventIsNotSet' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheSelfConversationHasTheSameRemoteIdentifierAsTheSelfUser' time='0.044'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheSelfConversationIsReadOnly' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatTheUserDefinedNameIsCopied' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatUnarchivingAConversationSetsTheArchivedChangedTimestamp' time='0.043'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatUpdatingFromTransportDataDoesNotSetAnyLocalModifiedKey' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatUpdatingUsersFromTransportDataPreservesUnsyncedInactiveAndActiveParticipants' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertAFileMessage' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertALocationMessage' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertAnAudioMessage' time='0.050'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertAnImageMessageFromAFileURL' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertAnImageMessageFromImageData' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertATextMessage' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanInsertAVideoMessage' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeCanSetAttributesOnConversation' time='0.073'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeHaveAConnectedUserForConnectionConversation' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWeHaveAConnectedUserForOneOnOneConversation' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAddingADownloadedClearedEventItSetsTheClearedTimeStamp' time='0.045'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAddingADownloadedLastReadEventItSetsTheLastReadTimeStamp' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAddingAnEventFollowingTheClearedEventItDoesNotSetTheClearedTimeStampIfNotNil' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAddingAnEventFollowingTheClearedEventItSetsTheClearedTimeStampIfNil' time='0.047'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAddingAParticipantItIsAddedToTheListOfUnsyncedActiveParticipants' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAddingAParticipantThe_unsyncedActiveParticipants_propertyHasLocalModifications' time='0.056'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAParticipantHasBeenAddedOnTheClientAndTheServerWeDoSyncItAnymore' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenAParticipantHasBeenRemovedOnTheClientAndTheServerWeDoNotSyncItAnymore' time='0.051'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenMovingAParticipantFromActiveToInactiveWeDoNotAddItAgain' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenMovingAParticipantFromInactiveToActiveWeDoNotRemoveItAgain' time='0.052'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenRemovingAParticipantItIsAddedToTheListOfUnsyncedInactiveParticipants' time='0.053'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenRemovingAParticipantThe_unsyncedInactiveParticipants_propertyHasLocalModifications' time='0.059'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenResettingAnUnsyncedAddedUserItIsNotUnsyncedAnymore' time='0.048'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenResettingAnUnsyncedUserItIsNotUnsyncedAnymore' time='0.050'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenSetNotToBeUpdatedFromBackendCallStateDoesNotChangeFromFalse' time='0.049'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenSetNotToBeUpdatedFromBackendCallStateDoesNotChangeFromTrue' time='0.046'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenSynchronizingAllAddedUsersThe_unsyncedActiveParticipants_changeFlagIsReset' time='0.058'/>
    <testcase classname='ZMConversationTests_Timestamp' name='testThatWhenSynchronizingAllRemovedUsersThe_unsyncedInactiveParticipants_changeFlagIsReset' time='0.056'/>
  </testsuite>
  <testsuite name='ZMDisplayNameGeneratorTests' tests='11' failures='0'>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsAbbreviatedNameForSameFirstnamesWithDifferentlyComposedCharacters' time='0.063'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsAbbreviatedNameForUserWithSameFirstnamesDifferentLastnameFirstLetter' time='0.029'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsBothFullNamesWhenBothNamesAreEmptyAfterTrimming' time='0.032'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsFirstNameForUserWithDifferentFirstnames' time='0.030'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsFullNameForUsersWithDifferentlyComposedSpecialCharacters' time='0.030'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsFullNameForUserWithSameFirstnamesAndSameLastnameFirstLetter' time='0.030'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsInitialsForUser' time='0.048'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsUpdatedDisplayNamesWhenInitializedWithCopy' time='0.027'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsUpdatedDisplayNamesWhenInitializedWithCopyAddingOneName' time='0.035'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsUpdatedDisplayNamesWhenTheInitialMapWasEmpty' time='0.027'/>
    <testcase classname='ZMDisplayNameGeneratorTests' name='testThatItReturnsUpdatedFullNames' time='0.026'/>
  </testsuite>
  <testsuite name='ZMEditableUserTests' tests='10' failures='0'>
    <testcase classname='ZMEditableUserTests' name='testThatItDoesNotValidateALongPhoneNumberWithTheRightError' time='0.048'/>
    <testcase classname='ZMEditableUserTests' name='testThatItDoesNotValidateAPhoneNumberWithLettersTheRightError' time='0.026'/>
    <testcase classname='ZMEditableUserTests' name='testThatItDoesNotValidateAShortPhoneNumberWithTheRightError' time='0.027'/>
    <testcase classname='ZMEditableUserTests' name='testThatItNormalizesTheEmailAddressWhenSwitchingFromIncompleteToComplete' time='0.027'/>
    <testcase classname='ZMEditableUserTests' name='testThatItNormalizesThePhoneNumber' time='0.028'/>
    <testcase classname='ZMEditableUserTests' name='testThatItNormalizesThePhoneNumberWhenSwitchingFromIncompleteToComplete' time='0.026'/>
    <testcase classname='ZMEditableUserTests' name='testThatItValidatesTheAccentColor' time='0.027'/>
    <testcase classname='ZMEditableUserTests' name='testThatItValidatesTheEmail' time='0.026'/>
    <testcase classname='ZMEditableUserTests' name='testThatItValidatesThePhoneNumber' time='0.029'/>
    <testcase classname='ZMEditableUserTests' name='testThatItValidatesTheUserName' time='0.028'/>
  </testsuite>
  <testsuite name='ZMFetchRequestBatchTests' tests='3' failures='0'>
    <testcase classname='ZMFetchRequestBatchTests' name='testThatItAddsNoncesToNoncesToFetch' time='0.028'/>
    <testcase classname='ZMFetchRequestBatchTests' name='testThatItAddsRemoteIdentifiersToIdentifiersToFetch' time='0.027'/>
    <testcase classname='ZMFetchRequestBatchTests' name='testThatItFetchesMessagesAndConversationsAndReturnsTheCorrectResult' time='0.039'/>
  </testsuite>
  <testsuite name='ZMGenericMessage_ExternalTests' tests='3' failures='0'>
    <testcase classname='ZMGenericMessage_ExternalTests' name='testThatDifferentKeysAreNotConsideredEqual' time='0.009'/>
    <testcase classname='ZMGenericMessage_ExternalTests' name='testThatItEncryptsTheMessageAndReturnsTheCorrectKeyAndDigest' time='0.001'/>
    <testcase classname='ZMGenericMessage_ExternalTests' name='testThatItUsesADifferentKeyForEachCall' time='0.001'/>
  </testsuite>
  <testsuite name='ZMManagedObjectTests' tests='29' failures='0'>
    <testcase classname='ZMManagedObjectTests' name='testExistingObjectWithID' time='0.091'/>
    <testcase classname='ZMManagedObjectTests' name='testObjectIDForURIRepresentation' time='0.089'/>
    <testcase classname='ZMManagedObjectTests' name='testPerformanceOfFetchingObjectByRemoteIDWhenTheObjectIsRegisteredWithTheContext' time='0.362'/>
    <testcase classname='ZMManagedObjectTests' name='testThatChangesInSyncContextAreNotPersisted' time='0.024'/>
    <testcase classname='ZMManagedObjectTests' name='testThatDeletedObjectsAreZombiesAfterASave' time='0.028'/>
    <testcase classname='ZMManagedObjectTests' name='testThatDeletedObjectsAreZombiesBeforeASave' time='0.033'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItAddsAPredicateToARequest' time='0.028'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItAddsAPredicateToARequestWithAPredicate' time='0.025'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItCreatesASortedFetchRequest' time='0.026'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItDoesNotFetcheAnObjectIfNoRemoteIdentifiersMatch' time='0.032'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItDoesNotFetcheAnObjectOfADifferentEntity' time='0.028'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItEnumeratesAllManagedObjectsInTheContext' time='0.025'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItFetchesUsingUUIDWhenTheObjectIsNotRegisteredWithTheContext' time='0.031'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItFetchesUsingUUIDWhenTheObjectIsRegisteredWithTheContext' time='0.028'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItPersistsLocalChanges' time='0.138'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItReturnsAnObjectForANonpersistedObjectIdentifier' time='0.032'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItReturnsAnObjectForANonpersistedObjectIdentifierAfterASave' time='0.038'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItReturnsNilForANilIdentifier' time='0.027'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItReturnsNilForAnInvalidExistingIdentifier' time='0.027'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItReturnsNilForANonExistingIdentifier' time='0.028'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItReturnsTheSameIdentifierForTemporaryAndSavedObjects' time='0.038'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItSetsAllLocalChanges' time='0.143'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItSetsSomeLocalChanges' time='0.086'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItStopsWhileEnumeratingManagedObjectsInTheContext' time='0.031'/>
    <testcase classname='ZMManagedObjectTests' name='testThatItUpdatesLocalChangesForReferences' time='0.144'/>
    <testcase classname='ZMManagedObjectTests' name='testThatLocalChangesAreReset' time='0.035'/>
    <testcase classname='ZMManagedObjectTests' name='testThatNoKeysAreModifiedRightAfterCreation' time='0.035'/>
    <testcase classname='ZMManagedObjectTests' name='testThatNormalObjectsAreNotZombie' time='0.037'/>
    <testcase classname='ZMManagedObjectTests' name='testThatOnlySomeLocalChangesAreReset' time='0.167'/>
  </testsuite>
  <testsuite name='ZMMessageTests' tests='96' failures='0'>
    <testcase classname='ZMMessageTests' name='testThat_doesEventGenerateMessage_returnsTrueForAllKnownTypes' time='0.158'/>
    <testcase classname='ZMMessageTests' name='testThat_isEventTypeGeneratingSystemMessage_returnsNo' time='0.107'/>
    <testcase classname='ZMMessageTests' name='testThatAClientMessageHasKnockMessageData' time='0.444'/>
    <testcase classname='ZMMessageTests' name='testThatAClientMessageIsRemovedWhenAskForDeletion' time='0.053'/>
    <testcase classname='ZMMessageTests' name='testThatAGIFWithMoreThanOneFrameIsRecognizedAsAnimatedGIF' time='0.069'/>
    <testcase classname='ZMMessageTests' name='testThatAGIFWithOnlyOneFrameIsNotAnAnimatedGIF' time='0.057'/>
    <testcase classname='ZMMessageTests' name='testThatAKnockMessageHasKnockMessageData' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatAMediumJPEGIsHasJPGType' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatAMediumJPEGIsNotAnAnimatedGIF' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatAMessageIsRemovedWhenAskForDeletionWithMessageHide' time='0.051'/>
    <testcase classname='ZMMessageTests' name='testThatAnAnimatedMediumGIFHasGIFType' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatAnAssetClientMessageIsRemovedWhenAskForDeletion' time='0.054'/>
    <testcase classname='ZMMessageTests' name='testThatAnEmptyImageMessageHasNoType' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatAnEmptyImageMessageIsNotAnAnimatedGIF' time='0.041'/>
    <testcase classname='ZMMessageTests' name='testThatAnImageMessageHasImageMessageData' time='0.042'/>
    <testcase classname='ZMMessageTests' name='testThatAOneFrameMediumGIFHasGIFType' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatASystemMessageHasSystemMessageData' time='0.043'/>
    <testcase classname='ZMMessageTests' name='testThatATextMessageHasTextMessageData' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatATextMessageIsRemovedWhenAskForDeletion' time='0.055'/>
    <testcase classname='ZMMessageTests' name='testThatDeliveryStateIsCouldNotSendIfTheExpiredFlagIsSet' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatExpiringAMessageSetsTheExpirationDateToNil' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatImageMessageIsUpdatedCorrectlyWhenItGetsMediumBeforePreview' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatImageMessageIsUpdatedCorrectlyWhenItGetsPreviewBeforeMedium' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatIt_DoesNot_SetLastReadServerTimestampOfItsConversationToServerTimestamp_ForOtherUserAsSender' time='0.048'/>
    <testcase classname='ZMMessageTests' name='testThatItCanSetData' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatItCreatesAKnockMessageFromAnUpdateEvent' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatItCreatesASystemMessageForAddingTheSelfUserToAGroupConversation' time='0.069'/>
    <testcase classname='ZMMessageTests' name='testThatItCreatesMediumImageMessagesFromUpdateEvent' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItCreatesOtrKnockMessageFromAnUpdateEvent' time='0.053'/>
    <testcase classname='ZMMessageTests' name='testThatItCreatesPreviewImageMessagesFromUpdateEvent' time='0.057'/>
    <testcase classname='ZMMessageTests' name='testThatItCreatesTextMessagesFromUpdateEvent' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotCrashWhenThePreviewImageIsMissingInAnUpdateEvent' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotCreateASystemMessageForAddingTheSelfuserToAConnectionConversation' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotCreateTextMessagesFromUpdateEventIfThereIsAlreadyAClientMessageWithTheSameNonce' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotGenerateSystemMessagesFromUpdateEventsOfTheWrongType' time='0.072'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotMatchExpiredObjectsForInsertingUpstream' time='0.043'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotReturnAnIdentifierWhenTheImageDataIsNil' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotReturnAnIdentifierWhenTheImagePreviewDataIsNil' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotUpdateTheServerTimestampAfterMediumWasUploaded' time='0.048'/>
    <testcase classname='ZMMessageTests' name='testThatItDoesNotUseTemporaryIDsForSender' time='0.051'/>
    <testcase classname='ZMMessageTests' name='testThatItFetchesMessageWhenThereAreNoPrefetchedMessagesWhenUpdatingAClientMessageMessageFromTextMessageUpdateEvent' time='0.058'/>
    <testcase classname='ZMMessageTests' name='testThatItFetchesTheLatestPotentialGapSystemMessage' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatItGeneratesTheCorrectSystemMessageTypesFromUpdateEvents' time='0.119'/>
    <testcase classname='ZMMessageTests' name='testThatItHasLocallyModifiedDataFields' time='0.051'/>
    <testcase classname='ZMMessageTests' name='testThatItIgnoresNanosecondSettingServerTimestampOnInsert' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItIncreasesUnreadCountForVoiceChannelDeactiveEventFromOtherUser' time='0.057'/>
    <testcase classname='ZMMessageTests' name='testThatItMarksSentConnectionRequestMessageAsReadOnUpdateEvent' time='0.067'/>
    <testcase classname='ZMMessageTests' name='testThatItMatchesObjectsThatNeedToBeInsertedUpstream' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatItOnlyFetchesSystemMesssagesInTheCorrectConversation' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatItRequiresPreviewAndMediumData' time='0.053'/>
    <testcase classname='ZMMessageTests' name='testThatItResetsTheExpirationDateWhenResending' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatItResetsTheExpiredStateWhenResending' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsAnIdentifierForTheImageData' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsAnIdentifierForTheImagePreviewData' time='0.368'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsATemporaryIdentifierForTheOriginalImageData' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsNilForUnknownTag' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsNilIfTheConversationIsMissing' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsNilIfTheNonceIsMissing' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsOnlyOtherUsersIfTheSenderIsNotTheOnlyUserContainedInUserIDs' time='0.056'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsSenderIFItsTheOnlyUserContainedInUserIDs' time='0.057'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsTheOriginalImageDataWhenTheMediumDataIsNotAvailable' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsZMDeliveryStateDeliveredWhenItHasAnEventID' time='0.044'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsZMDeliveryStateDeliveredWhenItHasAnEventIDAndTheExpiredFlagIsSet' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatItReturnsZMDeliveryStatePendingWhenItDoesNotHaveAnEventID' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatItSavesMessageTextFromConnectionRequestsInSystemMessage' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatItSavesTheConversationTitleInConversationNameChangeSystemMessage' time='0.061'/>
    <testcase classname='ZMMessageTests' name='testThatItSetsLastReadEventIDForVoiceChannelDeactiveEventFromSelfUser' time='0.056'/>
    <testcase classname='ZMMessageTests' name='testThatItSetsLastReadServerTimeStampForVoiceChannelDeactiveEventFromSelfUser' time='0.057'/>
    <testcase classname='ZMMessageTests' name='testThatItSetsLastReadServerTimestampOfItsConversationToServerTimestamp_ForSelfUserAsSender' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItSetsTheServerTimestampFromEventDataWhenItHasNoEventIDEvenIfItAlreadyHasADate' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItSetsTheServerTimestampToTheLatestOfTheTwoWhenUpdatingAMessageEarlierTimestamp' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatItSetsTheServerTimestampToTheLatestOfTheTwoWhenUpdatingAMessageWithLaterTimestamp' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatItSortsPendingAndNonPendingMessages' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatItStoresPermanentManagedObjectIdentifiersInTheUserField' time='0.050'/>
    <testcase classname='ZMMessageTests' name='testThatItUpdatedNeedsUpdatingUsersOnPotentialGapSystemMessageCorrectlyIfUserNameIsNil' time='0.053'/>
    <testcase classname='ZMMessageTests' name='testThatItUpdatesAMessageWithTheSameNonceIfItsAlreadyPresentFromUpdateEvent' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatItUpdatesIsPlainTextOnAlreadyExistingClientMessageWithTheSameNonceWhenReceivingATextMessageFromUpdateEvent' time='0.050'/>
    <testcase classname='ZMMessageTests' name='testThatItUpdatesTheServerTimestampAfterPreviewWasUploaded' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatItUsesPrefetchedMessageInsteadOfPerformingAFetchRequestWhenUpdatingAClientMessageMessageFromTextMessageUpdateEvent' time='0.059'/>
    <testcase classname='ZMMessageTests' name='testThatSettingTheOriginalDataRecognizesAGif' time='0.326'/>
    <testcase classname='ZMMessageTests' name='testThatSettingTheOriginalDataRecognizesAStaticImageAsNotGif' time='0.049'/>
    <testcase classname='ZMMessageTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeysForClientMessages' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeysForImageMessages' time='0.043'/>
    <testcase classname='ZMMessageTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeysForSystemMessages' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeysForTextMessages' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatTheEventIDForAnExistingMessageIsUpdatedFromUpdatedEvent' time='0.051'/>
    <testcase classname='ZMMessageTests' name='testThatTheServerTimestampForAnExistingMessageIsUpdatedFromUpdatedEvent' time='0.051'/>
    <testcase classname='ZMMessageTests' name='testThatTheServerTimeStampIsNilWhenTheServerTimestampIsNil' time='0.046'/>
    <testcase classname='ZMMessageTests' name='testThatTheServerTimeStampIsOffsetFromServerTimestampByTheLocalTimeZone' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatTheServerTimestampIsSetByDefault' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatTheServerTimeStampIsUpdatedWhenTheServerTimestampIsUpdated' time='0.045'/>
    <testcase classname='ZMMessageTests' name='testThatTheTextIsCopied' time='0.047'/>
    <testcase classname='ZMMessageTests' name='testThatWeCanSetAttributesOnImageMessage' time='0.072'/>
    <testcase classname='ZMMessageTests' name='testThatWeCanSetAttributesOnKnockMessage' time='0.052'/>
    <testcase classname='ZMMessageTests' name='testThatWeCanSetAttributesOnSystemMessage' time='0.056'/>
    <testcase classname='ZMMessageTests' name='testThatWeCanSetAttributesOnTextMessage' time='0.054'/>
  </testsuite>
  <testsuite name='ZMPersonNameTests' tests='26' failures='0'>
    <testcase classname='ZMPersonNameTests' name='testItGetsTheFullCharacterForComposedCharactersThatSpanMoreThanOneStringIndexPoint' time='0.551'/>
    <testcase classname='ZMPersonNameTests' name='testThatArabicNamesAreSeparatedCorrectly' time='0.032'/>
    <testcase classname='ZMPersonNameTests' name='testThatChineseNamesAreSeparatedCorrectly' time='0.056'/>
    <testcase classname='ZMPersonNameTests' name='testThatChineseNamesReturnFirstTwoCharactersAsInitials' time='0.031'/>
    <testcase classname='ZMPersonNameTests' name='testThatChineseNamesReturnOneCharactersIfTheNameConsistsOfOnlyOneCharacter' time='0.028'/>
    <testcase classname='ZMPersonNameTests' name='testThatHindiNamesAreSeparatedCorrectly' time='0.030'/>
    <testcase classname='ZMPersonNameTests' name='testThatItRemovesEmptyComponentFromComponents' time='0.051'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsFirstCharacterOfFirstAndLastNameAsInitials' time='0.030'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsFirstComponentAsFirstName' time='0.030'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsFirstLettersOFFirstAndLastComponentForArabicInitials' time='0.028'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsFirstTwoCharactersForInitialsOfJapanesNames' time='0.368'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsFullComposedCharacterForSecondNamesStartingWithComposedCharacters' time='0.029'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsFullNameWhenStringIsEmptyAfterTrimming' time='0.029'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsLastNameInitialForAbbreviatedName' time='0.167'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsOneCharacterWhenThereIsOnlyOneNameComponent' time='0.035'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsTheEntireNumberForAbbreviatedName' time='0.032'/>
    <testcase classname='ZMPersonNameTests' name='testThatItReturnsUntrimmedStringFullName' time='0.030'/>
    <testcase classname='ZMPersonNameTests' name='testThatItTrimsSpecialCharacters' time='0.030'/>
    <testcase classname='ZMPersonNameTests' name='testThatLinguisticTraggerRecognizesArabic' time='0.031'/>
    <testcase classname='ZMPersonNameTests' name='testThatLinguisticTraggerRecognizesSanskrit' time='0.031'/>
    <testcase classname='ZMPersonNameTests' name='testThatLinguisticTraggerRecognizesTraditionalAndSimplifiedChinese' time='0.125'/>
    <testcase classname='ZMPersonNameTests' name='testThatNameIsSeparatedIntoComponents' time='0.030'/>
    <testcase classname='ZMPersonNameTests' name='testThatSecondComponentIsGivenNameInJapanesNames' time='0.137'/>
    <testcase classname='ZMPersonNameTests' name='testThatTheFirstComposedCharacterReturnsNilWhenTheStringIsEmpty' time='0.028'/>
    <testcase classname='ZMPersonNameTests' name='testThatTheInitialsAreGeneratedCorrectlyIfThereIsOnlyOneCompositeCharacter' time='0.032'/>
    <testcase classname='ZMPersonNameTests' name='testThatTheSecondComposedCharacterReturnsNilWhenTheStringIsShorterThan2' time='0.031'/>
  </testsuite>
  <testsuite name='ZMSearchUserTests' tests='36' failures='0'>
    <testcase classname='ZMSearchUserTests' name='testThat_isLocalOrHasCachedProfileImageData_returnsNo' time='0.073'/>
    <testcase classname='ZMSearchUserTests' name='testThat_isLocalOrHasCachedProfileImageData_returnsNoIfMediumAssetIDAndDataAreNotSet' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThat_isLocalOrHasCachedProfileImageData_returnsYesForAUserWithCachedData' time='0.031'/>
    <testcase classname='ZMSearchUserTests' name='testThat_isLocalOrHasCachedProfileImageData_returnsYesForAUserWithCachedSmallData_MediumAssetID' time='0.031'/>
    <testcase classname='ZMSearchUserTests' name='testThat_isLocalOrHasCachedProfileImageData_returnsYesForLocalUser' time='0.042'/>
    <testcase classname='ZMSearchUserTests' name='testThatItCanBeConnectedIfItIsNotAlreadyConnected' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItCanNotBeConnectedIfItHasNoRemoteIdentifier' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItComparesEqualBasedOnContactWhenRemoteIDIsNil' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItComparesEqualBasedOnRemoteID' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItConnectsIfTheSearchUserHasANonConnectedUser' time='0.060'/>
    <testcase classname='ZMSearchUserTests' name='testThatItCreatesAConnectionForASeachUserThatHasNoLocalUser' time='0.153'/>
    <testcase classname='ZMSearchUserTests' name='testThatItCreatesCommonConnectionsFromPayloadFactoryInitializer' time='0.035'/>
    <testcase classname='ZMSearchUserTests' name='testThatItCreatesCommonConnectionsFromPayloadInitializer' time='0.034'/>
    <testcase classname='ZMSearchUserTests' name='testThatItCreatesSearchUserWhenInitialisedWithUser' time='0.036'/>
    <testcase classname='ZMSearchUserTests' name='testThatItDoesNotConnectIfTheSearchUserHasAConnectedUser' time='0.041'/>
    <testcase classname='ZMSearchUserTests' name='testThatItDoesNotConnectIfTheSearchUserHasNoRemoteIdentifier' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItFetchesAndReturnsCommonConnectionsForUserWhenNotInRegisteredObjects' time='0.084'/>
    <testcase classname='ZMSearchUserTests' name='testThatItHasAllDataItWasInitializedWith' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItNotifiesObserversWhenConnectingToASearchUserThatHasNoLocalUser' time='0.168'/>
    <testcase classname='ZMSearchUserTests' name='testThatItNotifiesObserverWhenConnectingToALocalUser' time='0.056'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsANulRemoteIdentifierAsTheMediumProfileImageIdentifierIfItHasNoCachedImage' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsANulRemoteIdentifierAsTheSmallProfileImageIdentifierIfItHasNoCachedImage' time='0.035'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsCommonConnectionsForUser' time='0.046'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsMediumAssetIDFromCacheIfItHasNoMediumAssetID' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsMediumImageFromCacheIfItHasNoUser' time='0.031'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsMediumImageFromUserIfItHasAUser' time='0.036'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsMediumProfileImageIdentifierFromUserIfItHasAUser' time='0.035'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsRemoteIdentifierAsTheMediumProfileImageIdentifierIfItHasACachedImage' time='0.031'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsRemoteIdentifierAsTheSmallProfileImageIdentifierIfItHasACachedImage' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsSmallProfileImageFromCacheIfItHasNoUser' time='0.033'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsSmallProfileImageFromUserIfItHasAUser' time='0.043'/>
    <testcase classname='ZMSearchUserTests' name='testThatItReturnsSmallProfileImageIdentifierFromUserIfItHasAUser' time='0.035'/>
    <testcase classname='ZMSearchUserTests' name='testThatItStoresTheCachedMediumProfileData' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItStoresTheCachedSmallProfileData' time='0.032'/>
    <testcase classname='ZMSearchUserTests' name='testThatItStoresTheConnectionRequestMessage' time='0.152'/>
    <testcase classname='ZMSearchUserTests' name='testThatItUsesDataFromAUserIfItHasOne' time='0.042'/>
  </testsuite>
  <testsuite name='ZMSyncMergePolicyTests' tests='4' failures='0'>
    <testcase classname='ZMSyncMergePolicyTests' name='testThatItMergesConflictingMessagesFromSyncMOCToUiMOC' time='0.095'/>
    <testcase classname='ZMSyncMergePolicyTests' name='testThatItMergesConflictingMessagesFromUiMOCToSyncMOC' time='0.066'/>
    <testcase classname='ZMSyncMergePolicyTests' name='testThatItMergesReorderingOfMessagesFromSyncMOCToUiMOC' time='0.062'/>
    <testcase classname='ZMSyncMergePolicyTests' name='testThatItMergesReorderingOfMessagesFromUiMOCToSyncMOC' time='0.064'/>
  </testsuite>
  <testsuite name='ZMUpdateEventTests' tests='8' failures='0'>
    <testcase classname='ZMUpdateEventTests' name='testReturnsYESForMatchingEventType' time='0.050'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_NO_ForMemberLeaveEventsWithSelfUser' time='0.041'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_NO_ForMissingEventID' time='0.041'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_NO_ForTimestampsSmallerThanArchiveTimestampOfConversation' time='0.043'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_NO_ForWrongConversation' time='0.041'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_NO_IfTheConversationIsNotArchived' time='0.044'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_NO_IfTheConversationIsSilenced' time='0.041'/>
    <testcase classname='ZMUpdateEventTests' name='testThatItReturns_YES_IfTheConversationIsSilenced_VoiceChannelActive_Events' time='0.044'/>
  </testsuite>
  <testsuite name='ZMUserTests' tests='119' failures='0'>
    <testcase classname='ZMUserTests' name='testPerformanceOfRetrievingSelfUser' time='0.789'/>
    <testcase classname='ZMUserTests' name='testThatBlockingABlockedUserDoesNotChangeAnything' time='0.130'/>
    <testcase classname='ZMUserTests' name='testThatBlockingAnIgnoredUserSetsTheConnectionStatusToBlocked' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatBlockingAnInvalidConnectionDoesNotChangeAnything' time='0.055'/>
    <testcase classname='ZMUserTests' name='testThatBlockingAPendingConnectionSetsTheConnectionStatusToBlocked' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatBlockingASentConnectionSetsTheConnectionStatusToBlocked' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatBlockingAUserSetsTheConnectionStatusToBlocked' time='0.053'/>
    <testcase classname='ZMUserTests' name='testThatCancellingConnectionSetsConnectionStatusToCancelled' time='0.067'/>
    <testcase classname='ZMUserTests' name='testThatClientsRequiringUserAttentionContainsUntrustedClientsWithNeedsToNotifyFlagSet' time='0.069'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToABlockedUserSetsTheConnectionStatusToAccepted' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAnAlreadyConnectedUserDoesNotCreateAnyChanges' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAnIgnoredUserSetsTheConnectionStatusToAccepted' time='0.058'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAPendingUserSetsTheConnectionStatusToAcceptedAndConversationTypeToOneToOne' time='0.055'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAUserSetsTheConnectionStatusAsHavingLocalModifications' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAUserThatHasNotAcceptedYetDoesNotCreateAnyChanges' time='0.055'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAUserThatIHaveNoConnectionWithCreatesANewConnectionWithConversation' time='0.058'/>
    <testcase classname='ZMUserTests' name='testThatConnectingToAUserThatIHavePreviouslyCancelledCreatesNewConnectionWithSameConversation' time='0.061'/>
    <testcase classname='ZMUserTests' name='testThatConnectionsValuesAreFalseWhenThereIsNotAConnectionToTheSelfUser' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatIsBlockedIsTrueWhenThereIsABlockedConnection' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatIsConnectedIsTrueWhenThereIsAnAcceptedConnection' time='0.084'/>
    <testcase classname='ZMUserTests' name='testThatIsIgnoreIsTrueWhenThereIsAnIgnoredConnection' time='0.182'/>
    <testcase classname='ZMUserTests' name='testThatIsNotMarkedAsUpdatedFromBackendWhenUpdatingWithNonAuthoritativeData' time='0.117'/>
    <testcase classname='ZMUserTests' name='testThatIsPendingByOtherUserIsTrueWhenThereIsASentConnection' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatIsPendingBySelfUserIsTrueWhenThereIsAPendingConnection' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItAcceptsAValidEmailAddress' time='0.087'/>
    <testcase classname='ZMUserTests' name='testThatItAcceptsAValidPhoneNumber' time='0.060'/>
    <testcase classname='ZMUserTests' name='testThatItAssignsRemoteIdentifierIfTheUserDoesNotHaveOne' time='0.056'/>
    <testcase classname='ZMUserTests' name='testThatItCallsTheCompletionHandlerAfterSendingAConnectionRequest' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItCanNotCancelAcceptedConnectionRequest' time='0.059'/>
    <testcase classname='ZMUserTests' name='testThatItCanNotCancelBlockedConnectionRequest' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItCanNotCancelIgnoredConnectionRequest' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItCanNotCancelIncommingConnectionRequest' time='0.056'/>
    <testcase classname='ZMUserTests' name='testThatItCreatesAUserForNonExistingUUID' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItCreatesSessionAndSelfUserCorrectly' time='0.074'/>
    <testcase classname='ZMUserTests' name='testThatItDeletesTheUserCorrelationIdentifierWhenDeletingTheOriginalImageData' time='0.047'/>
    <testcase classname='ZMUserTests' name='testThatItDetectsAnnaAsBot' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItDetectsOttoAsBot' time='0.047'/>
    <testcase classname='ZMUserTests' name='testThatItDetectsSimpleAnnaAsBot' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotDetectEmptyEmailAsBot' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotDetectPrefixedName' time='0.050'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotDetectUserAsBot' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotDetectWireUserAsBot' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotLimitTheAccentColorOnTheSyncContext' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotReturnANonExistingUserByUUID' time='0.050'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotStoreMediumImageDataInCacheForSelfUser' time='0.136'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotTryToCallTheCompletionHandlerIfItIsNil' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotValidateAShortPassword' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotValidateLongPassword' time='0.047'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotValidateTheEmailAddressOnTheSyncContext' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotValidateTheNameOnSyncContext_1' time='0.071'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotValidateTheNameOnSyncContext_2' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItDoesNotValidateThePhoneNumberOnTheSyncContext' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItDoesPersistMediumImageDataForNotSelfUserToCache' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItDoesPersistSmallImageDataForNotSelfUserToCache' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItFailsOnAnEmailAddressWithWhiteSpace' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItFailsOnAnInvalidEmailAddress' time='0.175'/>
    <testcase classname='ZMUserTests' name='testThatItHandlesEmptyOptionalData' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatItHandlesRemovingPictures' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItHasLocallyModifiedDataFields' time='0.048'/>
    <testcase classname='ZMUserTests' name='testThatItIsMarkedAsUpdatedFromBackendWhenUpdatingWithAuthoritativeData' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItLimitsAccentColorsToValidRangeForUdpateData_TooLarge' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItLimitsAccentColorsToValidRangeForUdpateData_Undefined' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItLimitsTheAccentColorToAValidRange' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItLimitsTheEmailAddressLength' time='0.079'/>
    <testcase classname='ZMUserTests' name='testThatItLimitsTheNameLength' time='0.061'/>
    <testcase classname='ZMUserTests' name='testThatItMatchesObjectsThatNeedToBeInsertedUpstream' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItMatchesObjectsThatNeedToBeUpdatedUpstream' time='0.053'/>
    <testcase classname='ZMUserTests' name='testThatItRecalculatesIsBlockedWhenConnectionChanges' time='0.067'/>
    <testcase classname='ZMUserTests' name='testThatItRecalculatesIsIgnoredWhenConnectionChanges' time='0.100'/>
    <testcase classname='ZMUserTests' name='testThatItRecalculatesIsPendingApprovalByOtherUsersWhenConnectionChanges' time='0.098'/>
    <testcase classname='ZMUserTests' name='testThatItRecalculatesIsPendingApprovalBySelfUserWhenConnectionChanges' time='0.114'/>
    <testcase classname='ZMUserTests' name='testThatItRejectsANameThatIsOnly1CharacterLong' time='0.116'/>
    <testcase classname='ZMUserTests' name='testThatItReplacesNewlinesAndTabWithSpacesInTheName' time='0.244'/>
    <testcase classname='ZMUserTests' name='testThatItReturns_Trusted_NO_WhenThereAreNoTrustedClients' time='0.071'/>
    <testcase classname='ZMUserTests' name='testThatItReturns_Trusted_YES_WhenThereAreNoClients' time='0.333'/>
    <testcase classname='ZMUserTests' name='testThatItReturns_Trusted_YES_WhenThereAreTrustedClients' time='0.106'/>
    <testcase classname='ZMUserTests' name='testThatItReturns_UnTrusted_NO_WhenThereAreNoClients' time='0.105'/>
    <testcase classname='ZMUserTests' name='testThatItReturns_UnTrusted_NO_WhenThereAreNoUnTrustedClients' time='0.142'/>
    <testcase classname='ZMUserTests' name='testThatItReturns_UnTrusted_YES_WhenThereAreUnTrustedClients' time='0.109'/>
    <testcase classname='ZMUserTests' name='testThatItReturnsAnExistingUserByUUID' time='0.084'/>
    <testcase classname='ZMUserTests' name='testThatItReturnsCorrectInitials' time='0.124'/>
    <testcase classname='ZMUserTests' name='testThatItReturnsCorrectUserName' time='0.102'/>
    <testcase classname='ZMUserTests' name='testThatItReturnsTheOneToOneConversationToAnUser' time='0.060'/>
    <testcase classname='ZMUserTests' name='testThatItRollsBackIfTheNameIsTooLong' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItSetsEmailToNilIfItIsMissing' time='0.066'/>
    <testcase classname='ZMUserTests' name='testThatItSetsImageRemoteIdentifiersToNilWhenDeletingTheProfileImage' time='0.053'/>
    <testcase classname='ZMUserTests' name='testThatItSetsNameToNilIfItIsMissing' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItSetsNormalizedEmailAddressWhenSettingTheEmailAddress' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItSetsNormalizedNameWhenSettingName' time='0.058'/>
    <testcase classname='ZMUserTests' name='testThatItSetsPhoneToNilIfItIsMissing' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItSetsTheUserCorrelationIdentifierWhenSettingTheOriginalImageData' time='0.050'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidateALongCode' time='0.065'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidateAnEmptyOrNilCode' time='0.050'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidateAShortCode' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidateEmptyOrNilPhoneNumber' time='0.050'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidateLongPhoneNumbers' time='0.050'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidatePhoneNumberWithInvalidChars' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesNotValidateShortPhoneNumbers' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyDoesValidateValidPhoneNumbers' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatItStaticallyValidatesACodeOfTheRightLength' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatItTrimmsTheNameForLeadingAndTrailingWhitespace' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatItTrimsWhiteSpaceInTheEmailAddress' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItUpdatesAUsersMediumImageData' time='0.071'/>
    <testcase classname='ZMUserTests' name='testThatItUpdatesAUsersSmallProfileImageData' time='0.055'/>
    <testcase classname='ZMUserTests' name='testThatItUpdatesBasicDataOnAnExistingUser' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatItUpdatesBasicDataOnAnExistingUserWithoutAccentID' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItUpdatesBasicDataOnAnExistingUserWithoutPicture' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatItValidatesAValidPassword' time='0.054'/>
    <testcase classname='ZMUserTests' name='testThatModifiedDataFieldsCanBeModifiedForSelfUser' time='0.053'/>
    <testcase classname='ZMUserTests' name='testThatModifiedDataFieldsCanNeverBeChangedForNormalUser' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatOnInvalidJSonDataTheUserIsMarkedAsComplete' time='0.056'/>
    <testcase classname='ZMUserTests' name='testThatOnInvalidJSonFormatItDoesNotCrash' time='0.064'/>
    <testcase classname='ZMUserTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeys' time='0.051'/>
    <testcase classname='ZMUserTests' name='testThatSpecialKeysAreNotPartOfTheLocallyModifiedKeysForSelfUser' time='0.087'/>
    <testcase classname='ZMUserTests' name='testThatTheEmailIsCopied' time='0.052'/>
    <testcase classname='ZMUserTests' name='testThatThePhoneNumberIsCopied' time='0.049'/>
    <testcase classname='ZMUserTests' name='testThatTheUserNameIsCopied' time='0.056'/>
    <testcase classname='ZMUserTests' name='testThatWeCanSetAttributesOnUser' time='0.057'/>
    <testcase classname='ZMUserTests' name='testThatWhenNonAuthoritativeIsMissingDataFieldsThoseAreNotSetToNil' time='0.055'/>
  </testsuite>
  <testsuite name='ZMUserTestsUseSQLLiteStore' tests='2' failures='0'>
    <testcase classname='ZMUserTestsUseSQLLiteStore' name='testThatItFetchesUsersWithOutLocalSmallProfileIdentifier' time='0.074'/>
    <testcase classname='ZMUserTestsUseSQLLiteStore' name='testThatItFetchesUsersWithOutMediumSmallProfileIdentifier' time='0.052'/>
  </testsuite>
</testsuites>